kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '11'
    meta.helm.sh/release-name: backstage
    meta.helm.sh/release-namespace: backstage
  name: backstage
  namespace: backstage
  labels:
    app.kubernetes.io/component: backstage
    app.kubernetes.io/instance: backstage
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: backstage
    helm.sh/chart: backstage-2.3.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: backstage
      app.kubernetes.io/instance: backstage
      app.kubernetes.io/name: backstage
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: backstage
        app.kubernetes.io/instance: backstage
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: backstage
        helm.sh/chart: backstage-2.3.0
      annotations:
        checksum/app-config: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        openshift.openshift.io/restartedAt: '2025-01-26T03:07:31.264Z'
    spec:
      restartPolicy: Always
      serviceAccountName: backstage
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: backstage-backend
          command:
            - node
            - packages/backend
          env:
            - name: APP_CONFIG_backend_listen_port
              value: '7007'
            - name: APP_CONFIG_app_baseUrl
              value: 'https://backstage-ocp.apps-crc.testing'
            - name: APP_CONFIG_backend_baseUrl
              value: 'https://backstage-ocp.apps-crc.testing'
            - name: APP_CONFIG_backend_cors_origin
              value: 'https://backstage-ocp.apps-crc.testing'
            - name: POSTGRES_HOST
              value: backstage-postgresql
            - name: POSTGRES_PORT
              value: '5432'
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backstage-postgresql
                  key: postgres-password
            - name: APP_CONFIG_backend_database_client
              value: pg
            - name: APP_CONFIG_backend_database_connection_host
              value: backstage-postgresql
            - name: APP_CONFIG_backend_database_connection_port
              value: '5432'
            - name: APP_CONFIG_backend_database_connection_user
              value: postgres
            - name: APP_CONFIG_backend_database_connection_password
              valueFrom:
                secretKeyRef:
                  name: backstage-postgresql
                  key: postgres-password
          ports:
            - name: backend
              containerPort: 7007
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: backstage-tls
              mountPath: /tmp/fakepath
          terminationMessagePolicy: File
          image: 'quay.io/juangonz/backstage-ocp:v1.1.4'
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: oauth-proxy
          ports:
            - name: oauth-proxy
              containerPort: 8888
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: backstage-tls
              mountPath: /etc/tls/private
          terminationMessagePolicy: File
          image: 'registry.redhat.io/openshift4/ose-oauth-proxy:v4.12'
          args:
            - '-provider=openshift'
            - '-https-address=:8888'
            - '-http-address='
            - '-email-domain=*'
            - '-upstream=http://localhost:7007'
            - '-tls-cert=/etc/tls/private/tls.crt'
            - '-tls-key=/etc/tls/private/tls.key'
            - '-cookie-secret="eHBjZHppdmF4bGxyYnhuY2lid3NpcWhzd2R6Znh1aHg="'
            - '-openshift-service-account=backstage'
            - '-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
            - '-skip-auth-regex=^/metrics'
            - '-skip-provider-button'
            - '-request-logging=true'
      serviceAccount: backstage
      volumes:
        - name: backstage-tls
          secret:
            secretName: backstage-tls
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
