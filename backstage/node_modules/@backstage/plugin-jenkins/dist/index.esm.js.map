{"version":3,"file":"index.esm.js","sources":["../src/api/JenkinsApi.ts","../src/plugin.ts","../src/components/BuildsPage/lib/Status/JenkinsRunStatus.tsx","../src/components/useBuilds.ts","../src/components/Cards/Cards.tsx","../src/constants.ts","../src/components/BuildsPage/lib/CITable/CITable.tsx","../src/components/useAsyncPolling.ts","../src/components/useBuildWithSteps.ts","../src/components/BuildWithStepsPage/BuildWithStepsPage.tsx","../src/components/Router.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createApiRef,\n  DiscoveryApi,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\nimport type { CompoundEntityRef } from '@backstage/catalog-model';\nimport { ResponseError } from '@backstage/errors';\n\nexport const jenkinsApiRef = createApiRef<JenkinsApi>({\n  id: 'plugin.jenkins.service2',\n});\n\nexport interface Build {\n  // standard Jenkins\n  timestamp: number;\n  building: boolean;\n  duration: number;\n  result?: string;\n  fullDisplayName: string;\n  displayName: string;\n  url: string;\n  number: number;\n\n  // added by us\n  source?: {\n    branchName: string;\n    displayName: string;\n    url: string;\n    commit: {\n      hash: string;\n    };\n    author: string;\n  };\n  tests: {\n    passed: number;\n    skipped: number;\n    failed: number;\n    total: number;\n    testUrl: string;\n  };\n  status: string; // == building ? 'running' : result,\n}\n\nexport interface Project {\n  // standard Jenkins\n  lastBuild: Build;\n  displayName: string;\n  fullDisplayName: string;\n  fullName: string;\n  inQueue: string;\n  // added by us\n  status: string; // == inQueue ? 'queued' : lastBuild.building ? 'running' : lastBuild.result,\n  onRestartClick: () => Promise<void>; // TODO rename to handle.* ? also, should this be on lastBuild?\n}\n\nexport interface JenkinsApi {\n  /**\n   * Get the projects (jobs which have builds, not folders) including info about their lastBuild.\n   *\n   * Deciding what jobs are for an entity can be configured by the backstage _Integrator_ in the plugin-jenkins-backend setup\n   * and by the _Software Engineer_ using annotations agreed with the _Integrator_.\n   *\n   * Typically, a folder job will be identified and the backend plugin will recursively look for projects (jobs with builds) within that folder.\n   */\n  getProjects(options: {\n    /** the entity whose jobs should be retrieved. */\n    entity: CompoundEntityRef;\n    /** a filter on jobs. Currently this just takes a branch (and assumes certain structures in jenkins) */\n    filter: { branch?: string };\n  }): Promise<Project[]>;\n\n  /**\n   * Get a single build.\n   *\n   * This takes an entity to support selecting between multiple jenkins instances.\n   *\n   * TODO: abstract jobFullName (so we could support differentiating between the same named job on multiple instances).\n   */\n  getBuild(options: {\n    entity: CompoundEntityRef;\n    jobFullName: string;\n    buildNumber: string;\n  }): Promise<Build>;\n\n  retry(options: {\n    entity: CompoundEntityRef;\n    jobFullName: string;\n    buildNumber: string;\n  }): Promise<void>;\n}\n\nexport class JenkinsClient implements JenkinsApi {\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly identityApi: IdentityApi;\n\n  constructor(options: {\n    discoveryApi: DiscoveryApi;\n    identityApi: IdentityApi;\n  }) {\n    this.discoveryApi = options.discoveryApi;\n    this.identityApi = options.identityApi;\n  }\n\n  async getProjects(options: {\n    entity: CompoundEntityRef;\n    filter: { branch?: string };\n  }): Promise<Project[]> {\n    const { entity, filter } = options;\n    const url = new URL(\n      `${await this.discoveryApi.getBaseUrl(\n        'jenkins',\n      )}/v1/entity/${encodeURIComponent(entity.namespace)}/${encodeURIComponent(\n        entity.kind,\n      )}/${encodeURIComponent(entity.name)}/projects`,\n    );\n\n    if (filter.branch) {\n      url.searchParams.append('branch', filter.branch);\n    }\n\n    const idToken = await this.getToken();\n    const response = await fetch(url.href, {\n      method: 'GET',\n      headers: {\n        ...(idToken && { Authorization: `Bearer ${idToken}` }),\n      },\n    });\n\n    return (\n      (await response.json()).projects?.map((p: Project) => ({\n        ...p,\n        onRestartClick: () => {\n          return this.retry({\n            entity,\n            jobFullName: p.fullName,\n            buildNumber: String(p.lastBuild.number),\n          });\n        },\n      })) || []\n    );\n  }\n\n  async getBuild(options: {\n    entity: CompoundEntityRef;\n    jobFullName: string;\n    buildNumber: string;\n  }): Promise<Build> {\n    const { entity, jobFullName, buildNumber } = options;\n    const url = `${await this.discoveryApi.getBaseUrl(\n      'jenkins',\n    )}/v1/entity/${encodeURIComponent(entity.namespace)}/${encodeURIComponent(\n      entity.kind,\n    )}/${encodeURIComponent(entity.name)}/job/${encodeURIComponent(\n      jobFullName,\n    )}/${encodeURIComponent(buildNumber)}`;\n\n    const idToken = await this.getToken();\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        ...(idToken && { Authorization: `Bearer ${idToken}` }),\n      },\n    });\n\n    return (await response.json()).build;\n  }\n\n  async retry(options: {\n    entity: CompoundEntityRef;\n    jobFullName: string;\n    buildNumber: string;\n  }): Promise<void> {\n    const { entity, jobFullName, buildNumber } = options;\n    const url = `${await this.discoveryApi.getBaseUrl(\n      'jenkins',\n    )}/v1/entity/${encodeURIComponent(entity.namespace)}/${encodeURIComponent(\n      entity.kind,\n    )}/${encodeURIComponent(entity.name)}/job/${encodeURIComponent(\n      jobFullName,\n    )}/${encodeURIComponent(buildNumber)}:rebuild`;\n\n    const idToken = await this.getToken();\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        ...(idToken && { Authorization: `Bearer ${idToken}` }),\n      },\n    });\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n  }\n\n  private async getToken() {\n    const { token } = await this.identityApi.getCredentials();\n    return token;\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  createRoutableExtension,\n  createRouteRef,\n  createSubRouteRef,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\nimport { JenkinsClient, jenkinsApiRef } from './api';\n\n/** @public */\nexport const rootRouteRef = createRouteRef({\n  id: 'jenkins',\n});\n\n/** @public */\nexport const buildRouteRef = createSubRouteRef({\n  id: 'jenkins/builds',\n  path: '/builds/:jobFullName/:buildNumber',\n  parent: rootRouteRef,\n});\n\n/** @public */\nexport const jenkinsPlugin = createPlugin({\n  id: 'jenkins',\n  apis: [\n    createApiFactory({\n      api: jenkinsApiRef,\n      deps: { discoveryApi: discoveryApiRef, identityApi: identityApiRef },\n      factory: ({ discoveryApi, identityApi }) =>\n        new JenkinsClient({ discoveryApi, identityApi }),\n    }),\n  ],\n  routes: {\n    entityContent: rootRouteRef,\n  },\n});\n\n/** @public */\nexport const EntityJenkinsContent = jenkinsPlugin.provide(\n  createRoutableExtension({\n    name: 'EntityJenkinsContent',\n    component: () => import('./components/Router').then(m => m.Router),\n    mountPoint: rootRouteRef,\n  }),\n);\n\n/** @public */\nexport const EntityLatestJenkinsRunCard = jenkinsPlugin.provide(\n  createComponentExtension({\n    name: 'EntityLatestJenkinsRunCard',\n    component: {\n      lazy: () => import('./components/Cards').then(m => m.LatestRunCard),\n    },\n  }),\n);\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport {\n  StatusPending,\n  StatusRunning,\n  StatusOK,\n  StatusWarning,\n  StatusAborted,\n  StatusError,\n} from '@backstage/core-components';\n\nexport const JenkinsRunStatus = ({\n  status,\n}: {\n  status: string | undefined;\n}) => {\n  if (status === undefined) return null;\n  switch (status.toLocaleLowerCase('en-US')) {\n    case 'queued':\n    case 'scheduled':\n      return (\n        <>\n          <StatusPending /> Queued\n        </>\n      );\n    case 'running':\n      return (\n        <>\n          <StatusRunning /> In progress\n        </>\n      );\n    case 'unstable':\n      return (\n        <>\n          <StatusWarning /> Unstable\n        </>\n      );\n    case 'failure':\n      return (\n        <>\n          <StatusError /> Failed\n        </>\n      );\n    case 'success':\n      return (\n        <>\n          <StatusOK /> Completed\n        </>\n      );\n    case 'aborted':\n      return (\n        <>\n          <StatusAborted /> Aborted\n        </>\n      );\n    default:\n      return (\n        <>\n          <StatusWarning /> {status}\n        </>\n      );\n  }\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useState } from 'react';\nimport useAsyncRetry from 'react-use/lib/useAsyncRetry';\nimport { jenkinsApiRef } from '../api';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { getCompoundEntityRef } from '@backstage/catalog-model';\n\nexport enum ErrorType {\n  CONNECTION_ERROR,\n  NOT_FOUND,\n}\n\n/**\n * Hook to expose the latest build for all the pipelines/projects for an entity.\n * If `branch` is provided, the latest build for only that branch will be given (but still as a list)\n *\n * TODO: deprecate branch and add a generic filter concept.\n */\nexport function useBuilds({ branch }: { branch?: string } = {}) {\n  const { entity } = useEntity();\n  const entityName = getCompoundEntityRef(entity);\n  const api = useApi(jenkinsApiRef);\n  const errorApi = useApi(errorApiRef);\n\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n  const [error, setError] = useState<{\n    message: string;\n    errorType: ErrorType;\n  }>();\n\n  const restartBuild = async (jobFullName: string, buildNumber: string) => {\n    try {\n      await api.retry({ entity: entityName, jobFullName, buildNumber });\n    } catch (e) {\n      errorApi.post(e);\n    }\n  };\n\n  const {\n    loading,\n    value: projects,\n    retry,\n  } = useAsyncRetry(async () => {\n    try {\n      const build = await api.getProjects({\n        entity: getCompoundEntityRef(entity),\n        filter: { branch },\n      });\n\n      setTotal(build.length);\n\n      return build;\n    } catch (e) {\n      const errorType = e.notFound\n        ? ErrorType.NOT_FOUND\n        : ErrorType.CONNECTION_ERROR;\n      setError({ message: e.message, errorType });\n      throw e;\n    }\n  }, [api, errorApi, entity, branch]);\n\n  return [\n    {\n      page,\n      pageSize,\n      loading,\n      projects,\n      total,\n      error,\n    },\n    {\n      setPage,\n      setPageSize,\n      restartBuild,\n      retry, // fetch data again\n    },\n  ] as const;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LinearProgress, makeStyles, Theme } from '@material-ui/core';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport { DateTime, Duration } from 'luxon';\nimport React from 'react';\nimport { JenkinsRunStatus } from '../BuildsPage/lib/Status';\nimport { ErrorType, useBuilds } from '../useBuilds';\nimport {\n  InfoCard,\n  InfoCardVariants,\n  Link,\n  StructuredMetadataTable,\n  WarningPanel,\n} from '@backstage/core-components';\nimport { Project } from '../../api/JenkinsApi';\n\nconst useStyles = makeStyles<Theme>({\n  externalLinkIcon: {\n    fontSize: 'inherit',\n    verticalAlign: 'bottom',\n  },\n});\n\nconst WidgetContent = ({\n  loading,\n  latestRun,\n}: {\n  loading?: boolean;\n  latestRun?: Project;\n  branch: string;\n}) => {\n  const classes = useStyles();\n  if (loading || !latestRun) return <LinearProgress />;\n  const displayDate = DateTime.fromMillis(\n    latestRun.lastBuild.timestamp,\n  ).toRelative();\n  const displayDuration =\n    (latestRun.lastBuild.building ? 'Running for ' : '') +\n    DateTime.local()\n      .minus(Duration.fromMillis(latestRun.lastBuild.duration))\n      .toRelative({ locale: 'en' })\n      ?.replace(' ago', '');\n\n  return (\n    <StructuredMetadataTable\n      metadata={{\n        status: (\n          <>\n            <JenkinsRunStatus status={latestRun.lastBuild.status} />\n          </>\n        ),\n        build: latestRun.fullDisplayName,\n        'latest run': displayDate,\n        duration: displayDuration,\n        link: (\n          <Link to={latestRun.lastBuild.url}>\n            See more on Jenkins{' '}\n            <ExternalLinkIcon className={classes.externalLinkIcon} />\n          </Link>\n        ),\n      }}\n    />\n  );\n};\n\nconst JenkinsApiErrorPanel = (props: {\n  message: string;\n  errorType: ErrorType;\n}) => {\n  const { message, errorType } = props;\n\n  let title = undefined;\n  if (errorType === ErrorType.CONNECTION_ERROR) {\n    title = \"Can't connect to Jenkins\";\n  } else if (errorType === ErrorType.NOT_FOUND) {\n    title = \"Can't find Jenkins project\";\n  }\n\n  return <WarningPanel severity=\"error\" title={title} message={message} />;\n};\n\nexport const LatestRunCard = (props: {\n  branch: string;\n  variant?: InfoCardVariants;\n}) => {\n  const { branch = 'master', variant } = props;\n  const [{ projects, loading, error }] = useBuilds({ branch });\n  const latestRun = projects?.[0];\n  return (\n    <InfoCard title={`Latest ${branch} build`} variant={variant}>\n      {!error ? (\n        <WidgetContent\n          loading={loading}\n          branch={branch}\n          latestRun={latestRun}\n        />\n      ) : (\n        <JenkinsApiErrorPanel\n          message={error.message}\n          errorType={error.errorType}\n        />\n      )}\n    </InfoCard>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const JENKINS_ANNOTATION = 'jenkins.io/job-full-name';\n// @deprecated The legacy annotation used for identifying Jenkins jobs, use\n// JENKINS_ANNOTATION instead.\nexport const LEGACY_JENKINS_ANNOTATION = 'jenkins.io/github-folder';\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Link, Progress, Table, TableColumn } from '@backstage/core-components';\nimport { alertApiRef, useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { useEntityPermission } from '@backstage/plugin-catalog-react/alpha';\nimport { Box, IconButton, Tooltip, Typography } from '@material-ui/core';\nimport RetryIcon from '@material-ui/icons/Replay';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { default as React, useState } from 'react';\nimport { Project } from '../../../../api/JenkinsApi';\nimport JenkinsLogo from '../../../../assets/JenkinsLogo.svg';\nimport { buildRouteRef } from '../../../../plugin';\nimport { useBuilds } from '../../../useBuilds';\nimport { JenkinsRunStatus } from '../Status';\nimport { jenkinsExecutePermission } from '@backstage/plugin-jenkins-common';\n\nconst FailCount = ({ count }: { count: number }): JSX.Element | null => {\n  if (count !== 0) {\n    return <>{count} failed</>;\n  }\n  return null;\n};\n\nconst SkippedCount = ({ count }: { count: number }): JSX.Element | null => {\n  if (count !== 0) {\n    return <>{count} skipped</>;\n  }\n  return null;\n};\n\nconst FailSkippedWidget = ({\n  skipped,\n  failed,\n}: {\n  skipped: number;\n  failed: number;\n}): JSX.Element | null => {\n  if (skipped === 0 && failed === 0) {\n    return null;\n  }\n\n  if (skipped !== 0 && failed !== 0) {\n    return (\n      <>\n        {' '}\n        (<FailCount count={failed} />, <SkippedCount count={skipped} />)\n      </>\n    );\n  }\n\n  if (failed !== 0) {\n    return (\n      <>\n        {' '}\n        (<FailCount count={failed} />)\n      </>\n    );\n  }\n\n  if (skipped !== 0) {\n    return (\n      <>\n        {' '}\n        (<SkippedCount count={skipped} />)\n      </>\n    );\n  }\n\n  return null;\n};\n\nconst generatedColumns: TableColumn[] = [\n  {\n    title: 'Timestamp',\n    defaultSort: 'desc',\n    hidden: true,\n    field: 'lastBuild.timestamp',\n  },\n  {\n    title: 'Build',\n    field: 'fullName',\n    highlight: true,\n    render: (row: Partial<Project>) => {\n      const LinkWrapper = () => {\n        const routeLink = useRouteRef(buildRouteRef);\n        if (!row.fullName || !row.lastBuild?.number) {\n          return (\n            <>\n              {row.fullName ||\n                row.fullDisplayName ||\n                row.displayName ||\n                'Unknown'}\n            </>\n          );\n        }\n\n        return (\n          <Link\n            to={routeLink({\n              jobFullName: encodeURIComponent(row.fullName),\n              buildNumber: String(row.lastBuild?.number),\n            })}\n          >\n            {row.fullDisplayName}\n          </Link>\n        );\n      };\n\n      return <LinkWrapper />;\n    },\n  },\n  {\n    title: 'Source',\n    field: 'lastBuild.source.branchName',\n    render: (row: Partial<Project>) => (\n      <>\n        <Typography paragraph>\n          <Link to={row.lastBuild?.source?.url ?? ''}>\n            {row.lastBuild?.source?.branchName}\n          </Link>\n        </Typography>\n        <Typography paragraph>{row.lastBuild?.source?.commit?.hash}</Typography>\n      </>\n    ),\n  },\n  {\n    title: 'Status',\n    field: 'status',\n    render: (row: Partial<Project>) => {\n      return (\n        <Box display=\"flex\" alignItems=\"center\">\n          <JenkinsRunStatus status={row.status} />\n        </Box>\n      );\n    },\n  },\n  {\n    title: 'Tests',\n    sorting: false,\n    render: (row: Partial<Project>) => {\n      return (\n        <>\n          <Typography paragraph>\n            {row.lastBuild?.tests && (\n              <Link to={row.lastBuild?.tests.testUrl ?? ''}>\n                {row.lastBuild?.tests.passed} / {row.lastBuild?.tests.total}{' '}\n                passed\n                <FailSkippedWidget\n                  skipped={row.lastBuild?.tests.skipped}\n                  failed={row.lastBuild?.tests.failed}\n                />\n              </Link>\n            )}\n\n            {!row.lastBuild?.tests && 'n/a'}\n          </Typography>\n        </>\n      );\n    },\n  },\n  {\n    title: 'Actions',\n    sorting: false,\n    render: (row: Partial<Project>) => {\n      const ActionWrapper = () => {\n        const [isLoadingRebuild, setIsLoadingRebuild] = useState(false);\n        const { allowed, loading } = useEntityPermission(\n          jenkinsExecutePermission,\n        );\n\n        const alertApi = useApi(alertApiRef);\n\n        const onRebuild = async () => {\n          if (row.onRestartClick) {\n            setIsLoadingRebuild(true);\n            try {\n              await row.onRestartClick();\n              alertApi.post({\n                message: 'Jenkins re-build has successfully executed',\n                severity: 'success',\n                display: 'transient',\n              });\n            } catch (e) {\n              alertApi.post({\n                message: `Jenkins re-build has failed. Error: ${e.message}`,\n                severity: 'error',\n              });\n            } finally {\n              setIsLoadingRebuild(false);\n            }\n          }\n        };\n\n        return (\n          <div style={{ width: '98px' }}>\n            {row.lastBuild?.url && (\n              <Tooltip title=\"View build\">\n                <IconButton href={row.lastBuild.url} target=\"_blank\">\n                  <VisibilityIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n            {isLoadingRebuild && <Progress />}\n            {!isLoadingRebuild && (\n              <Tooltip title=\"Rerun build\">\n                <IconButton onClick={onRebuild} disabled={loading || !allowed}>\n                  <RetryIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n          </div>\n        );\n      };\n      return <ActionWrapper />;\n    },\n    width: '10%',\n  },\n];\n\ntype Props = {\n  loading: boolean;\n  retry: () => void;\n  projects?: Project[];\n  page: number;\n  onChangePage: (page: number) => void;\n  total: number;\n  pageSize: number;\n  onChangePageSize: (pageSize: number) => void;\n};\n\nexport const CITableView = ({\n  loading,\n  pageSize,\n  page,\n  retry,\n  projects,\n  onChangePage,\n  onChangePageSize,\n  total,\n}: Props) => {\n  const projectsInPage = projects?.slice(\n    page * pageSize,\n    Math.min(projects.length, (page + 1) * pageSize),\n  );\n  return (\n    <Table\n      isLoading={loading}\n      options={{ paging: true, pageSize, padding: 'dense' }}\n      totalCount={total}\n      page={page}\n      actions={[\n        {\n          icon: () => <RetryIcon />,\n          tooltip: 'Refresh Data',\n          isFreeAction: true,\n          onClick: () => retry(),\n        },\n      ]}\n      data={projectsInPage ?? []}\n      onPageChange={onChangePage}\n      onRowsPerPageChange={onChangePageSize}\n      title={\n        <Box display=\"flex\" alignItems=\"center\">\n          <img src={JenkinsLogo} alt=\"Jenkins logo\" height=\"50px\" />\n          <Box mr={2} />\n          <Typography variant=\"h6\">Projects</Typography>\n        </Box>\n      }\n      columns={generatedColumns}\n    />\n  );\n};\n\nexport const CITable = () => {\n  const [tableProps, { setPage, retry, setPageSize }] = useBuilds();\n\n  return (\n    <CITableView\n      {...tableProps}\n      retry={retry}\n      onChangePageSize={setPageSize}\n      onChangePage={setPage}\n    />\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useRef } from 'react';\n\nexport const useAsyncPolling = (\n  pollingFn: () => Promise<any>,\n  interval: number,\n) => {\n  const isPolling = useRef<boolean>(false);\n  const startPolling = async () => {\n    if (isPolling.current === true) return;\n    isPolling.current = true;\n\n    while (isPolling.current === true) {\n      await pollingFn();\n      await new Promise(resolve => setTimeout(resolve, interval));\n    }\n  };\n\n  const stopPolling = () => {\n    isPolling.current = false;\n  };\n  return { startPolling, stopPolling };\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useCallback } from 'react';\nimport useAsyncRetry from 'react-use/lib/useAsyncRetry';\nimport { jenkinsApiRef } from '../api';\nimport { useAsyncPolling } from './useAsyncPolling';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { getCompoundEntityRef } from '@backstage/catalog-model';\n\nconst INTERVAL_AMOUNT = 1500;\n\n/**\n * Hook to expose a specific build.\n * @param jobFullName - the full name of the project (job with builds, not a folder). e.g. \"department-A/team-1/project-foo/master\"\n * @param buildNumber - the number of the build. e.g. \"13\"\n */\nexport function useBuildWithSteps({\n  jobFullName,\n  buildNumber,\n}: {\n  jobFullName: string;\n  buildNumber: string;\n}) {\n  const api = useApi(jenkinsApiRef);\n  const errorApi = useApi(errorApiRef);\n  const { entity } = useEntity();\n\n  const getBuildWithSteps = useCallback(async () => {\n    try {\n      const entityName = await getCompoundEntityRef(entity);\n      return api.getBuild({ entity: entityName, jobFullName, buildNumber });\n    } catch (e) {\n      errorApi.post(e);\n      return Promise.reject(e);\n    }\n  }, [buildNumber, jobFullName, entity, api, errorApi]);\n\n  const { loading, value, retry } = useAsyncRetry(\n    () => getBuildWithSteps(),\n    [getBuildWithSteps],\n  );\n\n  const { startPolling, stopPolling } = useAsyncPolling(\n    getBuildWithSteps,\n    INTERVAL_AMOUNT,\n  );\n\n  return [\n    { loading, value, retry },\n    {\n      getBuildWithSteps,\n      startPolling,\n      stopPolling,\n    },\n  ] as const;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Box,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport React from 'react';\nimport { buildRouteRef } from '../../plugin';\nimport { JenkinsRunStatus } from '../BuildsPage/lib/Status';\nimport { useBuildWithSteps } from '../useBuildWithSteps';\n\nimport { Breadcrumbs, Content, Link } from '@backstage/core-components';\nimport { useRouteRefParams } from '@backstage/core-plugin-api';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 720,\n  },\n  table: {\n    padding: theme.spacing(1),\n  },\n  externalLinkIcon: {\n    fontSize: 'inherit',\n    verticalAlign: 'bottom',\n  },\n}));\n\nconst BuildWithStepsView = () => {\n  // TODO: Add a test that react-router decodes this (even though `generatePath` doesn't encode it for you!)\n  const { jobFullName, buildNumber } = useRouteRefParams(buildRouteRef);\n  const classes = useStyles();\n\n  const [{ value }] = useBuildWithSteps({ jobFullName, buildNumber });\n\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        {/* TODO: don't hardcode this link */}\n        <Link to=\"../../..\">Projects</Link>\n        <Typography>Run</Typography>\n      </Breadcrumbs>\n      <Box m={2} />\n      <TableContainer component={Paper} className={classes.table}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Branch</Typography>\n              </TableCell>\n              <TableCell>{value?.source?.branchName}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Message</Typography>\n              </TableCell>\n              <TableCell>{value?.source?.displayName}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Commit ID</Typography>\n              </TableCell>\n              <TableCell>{value?.source?.commit?.hash}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Status</Typography>\n              </TableCell>\n              <TableCell>\n                <JenkinsRunStatus status={value?.status} />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Author</Typography>\n              </TableCell>\n              <TableCell>{value?.source?.author}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap>Jenkins</Typography>\n              </TableCell>\n              <TableCell>\n                {value?.url && (\n                  <Link to={value.url}>\n                    View on Jenkins{' '}\n                    <ExternalLinkIcon className={classes.externalLinkIcon} />\n                  </Link>\n                )}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>\n                {/* TODO: be SCM agnostic */}\n                <Typography noWrap>GitHub</Typography>\n              </TableCell>\n              <TableCell>\n                {value?.source?.url && (\n                  <Link to={value.source.url}>\n                    View on GitHub{' '}\n                    <ExternalLinkIcon className={classes.externalLinkIcon} />\n                  </Link>\n                )}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\nconst Page = () => (\n  <Content>\n    <BuildWithStepsView />\n  </Content>\n);\n\nexport default Page;\nexport { BuildWithStepsView as BuildWithSteps };\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { MissingAnnotationEmptyState } from '@backstage/core-components';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { JENKINS_ANNOTATION, LEGACY_JENKINS_ANNOTATION } from '../constants';\nimport { buildRouteRef } from '../plugin';\nimport { CITable } from './BuildsPage/lib/CITable';\nimport { DetailedViewPage } from './BuildWithStepsPage/';\n\n/** @public */\nexport const isJenkinsAvailable = (entity: Entity) =>\n  Boolean(entity.metadata.annotations?.[JENKINS_ANNOTATION]) ||\n  Boolean(entity.metadata.annotations?.[LEGACY_JENKINS_ANNOTATION]);\n\nexport const Router = () => {\n  const { entity } = useEntity();\n\n  if (!isJenkinsAvailable(entity)) {\n    return <MissingAnnotationEmptyState annotation={JENKINS_ANNOTATION} />;\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<CITable />} />\n      <Route path={`/${buildRouteRef.path}`} element={<DetailedViewPage />} />\n    </Routes>\n  );\n};\n"],"names":["ErrorType","useStyles","makeStyles","Table","DetailedViewPage"],"mappings":"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"}