{"version":3,"file":"index-116ceac7.esm.js","sources":["../../src/api/GitlabCIApi.ts","../../src/components/utils.tsx","../../src/api/GitlabCIClient.ts","../../src/plugin.ts","../../src/components/gitlabAppData.tsx","../../src/components/widgets/LanguagesCard/colors.ts","../../src/components/widgets/LanguagesCard/LanguagesCard.tsx","../../src/components/widgets/PeopleCard/components/PeopleCardEntity/PeopleCardEntity.tsx","../../src/components/widgets/PeopleCard/components/PeopleList/PeopleList.tsx","../../src/components/widgets/PeopleCard/PeopleCard.tsx","../../src/components/widgets/MergeRequestStats/MergeRequestStats.tsx","../../src/components/widgets/MergeRequestsTable/Icons.tsx","../../src/components/widgets/ReleasesCard/ReleasesCard.tsx","../../src/components/widgets/ReadmeCard/ReadmeCard.tsx","../../src/components/index.tsx"],"sourcesContent":["import { createApiRef } from '@backstage/core-plugin-api';\nimport { PeopleCardEntityData, Languages } from '../components/types';\nimport type {\n    IssueSchema,\n    MergeRequestSchema,\n    PipelineSchema,\n    ProjectSchema,\n    ReleaseSchema,\n    RepositoryContributorSchema,\n    UserSchema,\n} from '@gitbeaker/rest';\n\nexport type ContributorsSummary = (RepositoryContributorSchema &\n    Partial<UserSchema>)[];\n\nexport type LanguagesSummary = Languages;\n\nexport const GitlabCIApiRef = createApiRef<GitlabCIBuilder>({\n    id: 'plugin.gitlabci.service',\n});\n\nexport type GitlabCIBuilder = {\n    build(gitlabInstance: string): GitlabCIApi;\n};\n\nexport type GitlabCIApi = {\n    getPipelineSummary(\n        projectID: string | number\n    ): Promise<PipelineSchema[] | undefined>;\n    getContributorsSummary(\n        projectID: string | number\n    ): Promise<ContributorsSummary | undefined>;\n    getMergeRequestsSummary(\n        projectID: string | number\n    ): Promise<MergeRequestSchema[] | undefined>;\n    getMergeRequestsStatusSummary(\n        projectID: string | number,\n        count: number\n    ): Promise<MergeRequestSchema[] | undefined>;\n    getProjectName(projectID: string | number): Promise<string | undefined>;\n    getLanguagesSummary(\n        projectID: string | number\n    ): Promise<LanguagesSummary | undefined>;\n    getProjectDetails(projectSlug: string): Promise<ProjectSchema | undefined>;\n    getIssuesSummary(\n        projectID: string | number\n    ): Promise<IssueSchema[] | undefined>;\n    getCodeOwners(\n        projectID: string | number,\n        branch?: string,\n        filePath?: string\n    ): Promise<PeopleCardEntityData[]>;\n    getReleasesSummary(\n        projectID: string | number\n    ): Promise<ReleaseSchema[] | undefined>;\n\n    getContributorsLink(\n        projectWebUrl: string,\n        projectDefaultBranch: string\n    ): string;\n    getOwnersLink(\n        projectWebUrl: string,\n        projectDefaultBranch: string,\n        codeOwnersPath?: string\n    ): string;\n\n    getReadme(\n        projectID: string | number,\n        branch?: string,\n        filePath?: string\n    ): Promise<string | undefined>;\n};\n","import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport duration from 'dayjs/plugin/duration';\nimport { FileOwnership } from './types';\ndayjs.extend(relativeTime);\ndayjs.extend(duration);\n\nexport const getElapsedTime = (start: string) => {\n    return dayjs(start).fromNow();\n};\n\nexport const getDuration = (start: string, end: string) => {\n    if (!end || !start) {\n        return 'NA';\n    }\n\n    const end_time = dayjs(end); //todays date\n    const start_time = dayjs(start); // another date\n    const duration = dayjs.duration(\n        end_time.diff(start_time, 'seconds'),\n        'seconds'\n    );\n\n    const days = duration.days();\n    const hours = duration.hours();\n    const minutes = duration.minutes();\n    const seconds = duration.seconds();\n\n    const output = `${days ? days + 'd ' : ''}${hours ? hours + 'h ' : ''}${\n        minutes ? minutes + 'm ' : ''\n    }${seconds ? seconds + 's' : ''}`;\n\n    if (!output) return '0s';\n\n    return output;\n};\n\n/*\nThe following code is a modification of https://github.com/jjmschofield/github-codeowners \n\nCopyright (c) 2020 Jack Schofield (https://github.com/jjmschofield)\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport const parseCodeOwners = (str: string): FileOwnership[] => {\n    try {\n        const lines = str.replace(/\\r/g, '').split('\\n');\n\n        const owned = [];\n\n        for (const line of lines) {\n            if (!line || line.startsWith('#')) {\n                continue;\n            }\n\n            owned.push(parseCodeOwnerLine(line));\n        }\n\n        return owned;\n    } catch (error) {\n        console.log(`failed to load codeowners`, error);\n        throw error;\n    }\n};\n\nconst parseCodeOwnerLine = (rule: string): FileOwnership => {\n    // Split apart on spaces\n    const parts = rule.split(/\\s+/);\n\n    // The first part is expected to be the path\n    const path = parts[0];\n\n    let teamNames: string[] = [];\n\n    // Remaining parts are expected to be team names (if any)\n    if (parts.length > 1) {\n        teamNames = parts.slice(1, parts.length);\n        for (const name of teamNames) {\n            if (!codeOwnerRegex.test(name)) {\n                throw new Error(\n                    `${name} is not a valid owner name in rule ${rule}`\n                );\n            }\n        }\n    }\n\n    return {\n        rule,\n        path,\n        owners: teamNames,\n    };\n};\n\n// ensures that only the following patterns are allowed @octocat @octocat/kitty docs@example.com\nconst codeOwnerRegex =\n    /(^@[a-zA-Z0-9_\\-/]*$)|(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n","import { DiscoveryApi, IdentityApi } from '@backstage/core-plugin-api';\nimport { PeopleCardEntityData } from '../components/types';\nimport { parseCodeOwners } from '../components/utils';\nimport {\n    ContributorsSummary,\n    GitlabCIApi,\n    LanguagesSummary,\n} from './GitlabCIApi';\n\nimport type {\n    GroupSchema,\n    IssueSchema,\n    MergeRequestSchema,\n    PipelineSchema,\n    ProjectSchema,\n    ReleaseSchema,\n    RepositoryContributorSchema,\n    UserSchema,\n} from '@gitbeaker/rest';\n\nexport class GitlabCIClient implements GitlabCIApi {\n    discoveryApi: DiscoveryApi;\n    identityApi: IdentityApi;\n    codeOwnersPath: string;\n    gitlabInstance: string;\n    readmePath: string;\n\n    constructor({\n        discoveryApi,\n        identityApi,\n        codeOwnersPath,\n        readmePath,\n        gitlabInstance,\n    }: {\n        discoveryApi: DiscoveryApi;\n        identityApi: IdentityApi;\n        codeOwnersPath?: string;\n        readmePath?: string;\n        gitlabInstance: string;\n    }) {\n        this.discoveryApi = discoveryApi;\n        this.codeOwnersPath = codeOwnersPath || 'CODEOWNERS';\n        this.readmePath = readmePath || 'README.md';\n        this.gitlabInstance = gitlabInstance;\n        this.identityApi = identityApi;\n    }\n\n    static setupAPI({\n        discoveryApi,\n        identityApi,\n        codeOwnersPath,\n        readmePath,\n    }: {\n        discoveryApi: DiscoveryApi;\n        identityApi: IdentityApi;\n        codeOwnersPath?: string;\n        readmePath?: string;\n    }) {\n        return {\n            build: (gitlabInstance: string) =>\n                new this({\n                    discoveryApi,\n                    identityApi,\n                    codeOwnersPath,\n                    readmePath,\n                    gitlabInstance,\n                }),\n        };\n    }\n\n    protected async callApi<T>(\n        path: string,\n        query: { [key in string]: string }\n    ): Promise<T | undefined> {\n        const apiUrl = `${await this.discoveryApi.getBaseUrl('gitlab')}/${\n            this.gitlabInstance\n        }`;\n        const token = (await this.identityApi.getCredentials()).token;\n        const options = token\n            ? {\n                  headers: {\n                      Authorization: `Bearer ${token}`,\n                  },\n              }\n            : {};\n        const response = await fetch(\n            `${apiUrl}/${path}?${new URLSearchParams(query).toString()}`,\n            options\n        );\n        if (response.status === 200) {\n            if (\n                response.headers\n                    .get('content-type')\n                    ?.includes('application/json')\n            ) {\n                return (await response.json()) as T;\n            } else {\n                return response.text() as unknown as T;\n            }\n        }\n        return undefined;\n    }\n\n    async getPipelineSummary(\n        projectID?: string | number\n    ): Promise<PipelineSchema[] | undefined> {\n        const [pipelineObjects, projectObj] = await Promise.all([\n            this.callApi<PipelineSchema[]>(\n                'projects/' + projectID + '/pipelines',\n                {}\n            ),\n            this.callApi<Record<string, string>>('projects/' + projectID, {}),\n        ]);\n        if (pipelineObjects && projectObj) {\n            pipelineObjects.forEach((element) => {\n                element.project_name = projectObj.name;\n            });\n        }\n        return pipelineObjects || undefined;\n    }\n\n    async getIssuesSummary(\n        projectId: string | number\n    ): Promise<IssueSchema[] | undefined> {\n        const [issuesObject, projectObj] = await Promise.all([\n            this.callApi<IssueSchema[]>(`projects/${projectId}/issues`, {}),\n            this.callApi<Record<string, string>>('projects/' + projectId, {}),\n        ]);\n        if (issuesObject && projectObj) {\n            issuesObject.forEach((element) => {\n                element.project_name = projectObj.name;\n            });\n        }\n\n        return issuesObject || undefined;\n    }\n\n    async getProjectName(\n        projectID?: string | number\n    ): Promise<string | undefined> {\n        const projectObj = await this.callApi<ProjectSchema>(\n            'projects/' + projectID,\n            {}\n        );\n        return projectObj?.name;\n    }\n\n    //TODO: Merge with getUserDetail\n    private async getUserProfilesData(\n        contributorsData: RepositoryContributorSchema[]\n    ): Promise<ContributorsSummary> {\n        return Promise.all(\n            contributorsData.map(async (contributor) => {\n                const userProfile = await this.callApi<UserSchema[]>('users', {\n                    search: contributor.email,\n                    without_project_bots: 'true',\n                });\n\n                const user = userProfile?.find(\n                    (v) => v.name === contributor.name\n                );\n\n                if (user) {\n                    return {\n                        ...contributor,\n                        ...user,\n                    };\n                }\n                return contributor;\n            })\n        );\n    }\n\n    private async getUserDetail(username: string): Promise<UserSchema> {\n        if (username.startsWith('@')) {\n            username = username.slice(1);\n        }\n        const userDetail = (\n            await this.callApi<UserSchema[]>('users', {\n                username,\n            })\n        )?.[0];\n\n        if (!userDetail) throw new Error(`user ${username} does not exist`);\n\n        return userDetail;\n    }\n    private async getGroupDetail(name: string): Promise<GroupSchema> {\n        if (name.startsWith('@')) {\n            name = name.slice(1);\n        }\n        const groupDetail = await this.callApi<GroupSchema>(\n            `groups/${encodeURIComponent(name)}`,\n            { with_projects: 'false' }\n        );\n\n        if (!groupDetail) throw new Error(`group ${name} does not exist`);\n\n        return groupDetail;\n    }\n\n    async getMergeRequestsSummary(\n        projectID?: string | number\n    ): Promise<MergeRequestSchema[] | undefined> {\n        return this.callApi<MergeRequestSchema[]>(\n            'projects/' + projectID + '/merge_requests',\n            {}\n        );\n    }\n\n    async getMergeRequestsStatusSummary(\n        projectID?: string | number,\n        count?: number\n    ): Promise<MergeRequestSchema[] | undefined> {\n        return this.callApi<MergeRequestSchema[]>(\n            'projects/' + projectID + '/merge_requests',\n            { per_page: (count ?? 20).toString(10) }\n        );\n    }\n\n    async getContributorsSummary(\n        projectID?: string | number\n    ): Promise<ContributorsSummary | undefined> {\n        const contributorsData = await this.callApi<\n            RepositoryContributorSchema[]\n        >('projects/' + projectID + '/repository/contributors', {\n            sort: 'desc',\n        });\n\n        const updatedContributorsData = await this.getUserProfilesData(\n            contributorsData!\n        );\n\n        return updatedContributorsData;\n    }\n\n    async getLanguagesSummary(\n        projectID?: string | number\n    ): Promise<LanguagesSummary | undefined> {\n        return this.callApi<Record<string, number>>(\n            'projects/' + projectID + '/languages',\n            {}\n        );\n    }\n\n    async getReleasesSummary(\n        projectID: string | number\n    ): Promise<ReleaseSchema[] | undefined> {\n        return this.callApi<ReleaseSchema[]>(\n            'projects/' + projectID + '/releases',\n            {}\n        );\n    }\n\n    async getProjectDetails(\n        projectSlug: string\n    ): Promise<ProjectSchema | undefined> {\n        if (!projectSlug) return undefined;\n\n        return this.callApi<ProjectSchema>(\n            'projects/' + encodeURIComponent(projectSlug),\n            {}\n        );\n    }\n\n    async getCodeOwners(\n        projectID: string | number,\n        branch = 'HEAD',\n        filePath?: string\n    ): Promise<PeopleCardEntityData[]> {\n        filePath = filePath || this.codeOwnersPath;\n        // Removing starting './'\n        if (filePath.startsWith('./')) filePath = filePath.slice(2);\n\n        const codeOwnersStr = await this.callApi<string>(\n            `projects/${projectID}/repository/files/${encodeURI(filePath)}/raw`,\n            { ref: branch }\n        );\n\n        if (!codeOwnersStr) {\n            throw Error(`Code owners file not found`);\n        }\n\n        const codeOwners = parseCodeOwners(codeOwnersStr);\n\n        const uniqueOwners = [\n            ...new Set(codeOwners.flatMap((owner) => owner.owners)),\n        ];\n        const ownersSettledResult: PromiseSettledResult<PeopleCardEntityData>[] =\n            await Promise.allSettled(\n                uniqueOwners.map(async (owner) => {\n                    try {\n                        const ownerData = await this.getUserDetail(owner);\n                        return ownerData;\n                    } catch (error) {\n                        return this.getGroupDetail(owner);\n                    }\n                })\n            );\n        const owners = ownersSettledResult\n            .filter((result) => result.status === 'fulfilled')\n            .map(\n                (result) =>\n                    (result as PromiseFulfilledResult<PeopleCardEntityData>)\n                        .value\n            );\n        return owners;\n    }\n\n    async getReadme(\n        projectID: string | number,\n        branch = 'HEAD',\n        filePath?: string\n    ): Promise<string | undefined> {\n        filePath = filePath || this.readmePath;\n        // Removing starting './'\n        if (filePath.startsWith('./')) filePath = filePath.slice(2);\n\n        const readmeStr = await this.callApi<string>(\n            `projects/${projectID}/repository/files/${encodeURI(filePath)}/raw`,\n            { ref: branch }\n        );\n\n        if (!readmeStr) {\n            throw Error(`README file not found`);\n        }\n\n        return readmeStr;\n    }\n\n    getContributorsLink(\n        projectWebUrl: string,\n        projectDefaultBranch: string\n    ): string {\n        return `${projectWebUrl}/-/graphs/${projectDefaultBranch}`;\n    }\n\n    getOwnersLink(\n        projectWebUrl: string,\n        projectDefaultBranch: string,\n        codeOwnersPath?: string\n    ): string {\n        return `${projectWebUrl}/-/blob/${projectDefaultBranch}/${\n            codeOwnersPath || this.codeOwnersPath\n        }`;\n    }\n}\n","import {\n    createComponentExtension,\n    createPlugin,\n    createRoutableExtension,\n    identityApiRef,\n} from '@backstage/core-plugin-api';\n\nimport {\n    configApiRef,\n    createApiFactory,\n    createRouteRef,\n    discoveryApiRef,\n} from '@backstage/core-plugin-api';\nimport { GitlabCIApiRef, GitlabCIClient } from './api';\n\nexport const rootRouteRef = createRouteRef({\n    id: 'Gitlab',\n});\n\nexport const gitlabPlugin = createPlugin({\n    id: 'Gitlab',\n    apis: [\n        createApiFactory({\n            api: GitlabCIApiRef,\n            deps: {\n                configApi: configApiRef,\n                discoveryApi: discoveryApiRef,\n                identityApi: identityApiRef,\n            },\n            factory: ({ configApi, discoveryApi, identityApi }) =>\n                GitlabCIClient.setupAPI({\n                    discoveryApi,\n                    identityApi,\n                    codeOwnersPath: configApi.getOptionalString(\n                        'gitlab.defaultCodeOwnersPath'\n                    ),\n                    readmePath: configApi.getOptionalString(\n                        'gitlab.defaultReadmePath'\n                    ),\n                }),\n        }),\n    ],\n});\n\nexport const EntityGitlabContent = gitlabPlugin.provide(\n    createRoutableExtension({\n        name: 'EntityGitlabContent',\n        component: () =>\n            import('./components/GitlabCI').then((m) => m.GitlabCI),\n        mountPoint: rootRouteRef,\n    })\n);\n\nexport const EntityGitlabLanguageCard = gitlabPlugin.provide(\n    createComponentExtension({\n        name: 'EntityGitlabLanguageCard',\n        component: {\n            lazy: () =>\n                import('./components/widgets/index').then(\n                    (m) => m.LanguagesCard\n                ),\n        },\n    })\n);\n\nexport const EntityGitlabPeopleCard = gitlabPlugin.provide(\n    createComponentExtension({\n        name: 'EntityGitlabPeopleCard',\n        component: {\n            lazy: () =>\n                import('./components/widgets/index').then((m) => m.PeopleCard),\n        },\n    })\n);\n\nexport const EntityGitlabMergeRequestsTable = gitlabPlugin.provide(\n    createComponentExtension({\n        name: 'EntityGitlabMergeRequestsTable',\n        component: {\n            lazy: () =>\n                import('./components/widgets/index').then(\n                    (m) => m.MergeRequestsTable\n                ),\n        },\n    })\n);\n\nexport const EntityGitlabMergeRequestStatsCard = gitlabPlugin.provide(\n    createComponentExtension({\n        name: 'EntityGitlabMergeRequestStatsCard',\n        component: {\n            lazy: () =>\n                import('./components/widgets/index').then(\n                    (m) => m.MergeRequestStats\n                ),\n        },\n    })\n);\n\nexport const EntityGitlabPipelinesTable = gitlabPlugin.provide(\n    createComponentExtension({\n        name: 'EntityGitlabPipelinesTable',\n        component: {\n            lazy: () =>\n                import('./components/widgets/index').then(\n                    (m) => m.PipelinesTable\n                ),\n        },\n    })\n);\n\nexport const EntityGitlabReleasesCard = gitlabPlugin.provide(\n    createComponentExtension({\n        name: 'EntityGitlabReleasesCard',\n        component: {\n            lazy: () =>\n                import('./components/widgets/index').then(\n                    (m) => m.ReleasesCard\n                ),\n        },\n    })\n);\n\nexport const EntityGitlabIssuesTable = gitlabPlugin.provide(\n    createComponentExtension({\n        name: 'EntityGitlabIssuesTable',\n        component: {\n            lazy: () =>\n                import('./components/widgets/index').then((m) => m.IssuesTable),\n        },\n    })\n);\n\nexport const EntityGitlabReadmeCard = gitlabPlugin.provide(\n    createComponentExtension({\n        name: 'EntityGitlabReadmeCard',\n        component: {\n            lazy: () =>\n                import('./components/widgets/index').then((m) => m.ReadmeCard),\n        },\n    })\n);\n","/*\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n *\n * limitations under the License.\n */\n\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\nimport {\n    parseLocationRef,\n    ANNOTATION_LOCATION,\n    ANNOTATION_SOURCE_LOCATION,\n} from '@backstage/catalog-model';\n\nexport const GITLAB_ANNOTATION_PROJECT_ID = 'gitlab.com/project-id';\nexport const GITLAB_ANNOTATION_PROJECT_SLUG = 'gitlab.com/project-slug';\nexport const GITLAB_ANNOTATION_INSTANCE = 'gitlab.com/instance';\nexport const GITLAB_ANNOTATION_CODEOWNERS_PATH = 'gitlab.com/codeowners-path';\nexport const GITLAB_ANNOTATION_README_PATH = 'gitlab.com/readme-path';\nconst defaultGitlabIntegration = {\n    hostname: 'gitlab.com',\n    baseUrl: 'https://gitlab.com/api/v4',\n};\n\nexport const useEntityGitlabScmIntegration = () => {\n    const { entity } = useEntity();\n    const integrations = useApi(scmIntegrationsApiRef);\n    if (!entity) {\n        return defaultGitlabIntegration;\n    }\n\n    let location = entity.metadata.annotations?.[ANNOTATION_SOURCE_LOCATION];\n\n    if (!location) {\n        location = entity.metadata.annotations?.[ANNOTATION_LOCATION];\n    }\n\n    const { target } = parseLocationRef(location || '');\n\n    const scm = integrations.gitlab.byUrl(target);\n    if (scm) {\n        return {\n            hostname: scm.config.host,\n            baseUrl: scm.config.apiBaseUrl,\n        };\n    }\n    return defaultGitlabIntegration;\n};\n\nexport const gitlabProjectId = () => {\n    const { entity } = useEntity();\n\n    const project_id =\n        entity.metadata.annotations?.[GITLAB_ANNOTATION_PROJECT_ID] ?? '';\n\n    return project_id;\n};\n\nexport const gitlabProjectSlug = () => {\n    const { entity } = useEntity();\n\n    const project_slug =\n        entity.metadata.annotations?.[GITLAB_ANNOTATION_PROJECT_SLUG] ?? '';\n\n    return project_slug;\n};\n\nexport const gitlabInstance = () => {\n    const { entity } = useEntity();\n\n    const instance =\n        entity.metadata.annotations?.[GITLAB_ANNOTATION_INSTANCE] ?? '';\n\n    return instance;\n};\n\nexport const gitlabCodeOwnerPath = () => {\n    const { entity } = useEntity();\n\n    const codeowners_path =\n        entity.metadata.annotations?.[GITLAB_ANNOTATION_CODEOWNERS_PATH] ?? '';\n\n    return codeowners_path;\n};\n\nexport const gitlabReadmePath = () => {\n    const { entity } = useEntity();\n\n    const readme_path =\n        entity.metadata.annotations?.[GITLAB_ANNOTATION_README_PATH] ?? '';\n\n    return readme_path;\n};\n","// Content from https://github.com/github/linguist/blob/master/lib/linguist/languages.yml\ntype Colors = {\n    [key: string]: {\n        color: string;\n    };\n};\n\nexport const colors: Colors = {\n    '1C Enterprise': {\n        color: '#814CCC',\n    },\n    '4D': {\n        color: 'inherit',\n    },\n    ABAP: {\n        color: '#E8274B',\n    },\n    ActionScript: {\n        color: '#882B0F',\n    },\n    Ada: {\n        color: '#02f88c',\n    },\n    Agda: {\n        color: '#315665',\n    },\n    'AGS Script': {\n        color: '#B9D9FF',\n    },\n    AL: {\n        color: '#3AA2B5',\n    },\n    Alloy: {\n        color: '#64C800',\n    },\n    'Alpine Abuild': {\n        color: 'inherit',\n    },\n    AMPL: {\n        color: '#E6EFBB',\n    },\n    AngelScript: {\n        color: '#C7D7DC',\n    },\n    ANTLR: {\n        color: '#9DC3FF',\n    },\n    Apex: {\n        color: '#1797c0',\n    },\n    'API Blueprint': {\n        color: '#2ACCA8',\n    },\n    APL: {\n        color: '#5A8164',\n    },\n    'Apollo Guidance Computer': {\n        color: '#0B3D91',\n    },\n    AppleScript: {\n        color: '#101F1F',\n    },\n    Arc: {\n        color: '#aa2afe',\n    },\n    ASL: {\n        color: 'inherit',\n    },\n    'ASP.NET': {\n        color: '#9400ff',\n    },\n    AspectJ: {\n        color: '#a957b0',\n    },\n    Assembly: {\n        color: '#6E4C13',\n    },\n    Asymptote: {\n        color: '#ff0000',\n    },\n    ATS: {\n        color: '#1ac620',\n    },\n    Augeas: {\n        color: 'inherit',\n    },\n    AutoHotkey: {\n        color: '#6594b9',\n    },\n    AutoIt: {\n        color: '#1C3552',\n    },\n    Awk: {\n        color: 'inherit',\n    },\n    Ballerina: {\n        color: '#FF5000',\n    },\n    Batchfile: {\n        color: '#C1F12E',\n    },\n    Befunge: {\n        color: 'inherit',\n    },\n    Bison: {\n        color: '#6A463F',\n    },\n    BitBake: {\n        color: 'inherit',\n    },\n    Blade: {\n        color: '#f7523f',\n    },\n    BlitzBasic: {\n        color: 'inherit',\n    },\n    BlitzMax: {\n        color: '#cd6400',\n    },\n    Bluespec: {\n        color: 'inherit',\n    },\n    Boo: {\n        color: '#d4bec1',\n    },\n    Brainfuck: {\n        color: '#2F2530',\n    },\n    Brightscript: {\n        color: 'inherit',\n    },\n    C: {\n        color: '#555555',\n    },\n    'C#': {\n        color: '#178600',\n    },\n    'C++': {\n        color: '#f34b7d',\n    },\n    'C2hs Haskell': {\n        color: 'inherit',\n    },\n    \"Cap'n Proto\": {\n        color: 'inherit',\n    },\n    CartoCSS: {\n        color: 'inherit',\n    },\n    Ceylon: {\n        color: '#dfa535',\n    },\n    Chapel: {\n        color: '#8dc63f',\n    },\n    Charity: {\n        color: 'inherit',\n    },\n    ChucK: {\n        color: 'inherit',\n    },\n    Cirru: {\n        color: '#ccccff',\n    },\n    Clarion: {\n        color: '#db901e',\n    },\n    'Classic ASP': {\n        color: '#6a40fd',\n    },\n    Clean: {\n        color: '#3F85AF',\n    },\n    Click: {\n        color: '#E4E6F3',\n    },\n    CLIPS: {\n        color: 'inherit',\n    },\n    Clojure: {\n        color: '#db5855',\n    },\n    CMake: {\n        color: 'inherit',\n    },\n    COBOL: {\n        color: 'inherit',\n    },\n    CodeQL: {\n        color: 'inherit',\n    },\n    CoffeeScript: {\n        color: '#244776',\n    },\n    ColdFusion: {\n        color: '#ed2cd6',\n    },\n    'ColdFusion CFC': {\n        color: '#ed2cd6',\n    },\n    'Common Lisp': {\n        color: '#3fb68b',\n    },\n    'Common Workflow Language': {\n        color: '#B5314C',\n    },\n    'Component Pascal': {\n        color: '#B0CE4E',\n    },\n    Cool: {\n        color: 'inherit',\n    },\n    Coq: {\n        color: 'inherit',\n    },\n    Crystal: {\n        color: '#000100',\n    },\n    CSON: {\n        color: '#244776',\n    },\n    Csound: {\n        color: 'inherit',\n    },\n    'Csound Document': {\n        color: 'inherit',\n    },\n    'Csound Score': {\n        color: 'inherit',\n    },\n    CSS: {\n        color: '#563d7c',\n    },\n    Cuda: {\n        color: '#3A4E3A',\n    },\n    CWeb: {\n        color: 'inherit',\n    },\n    Cycript: {\n        color: 'inherit',\n    },\n    Cython: {\n        color: 'inherit',\n    },\n    D: {\n        color: '#ba595e',\n    },\n    Dafny: {\n        color: '#FFEC25',\n    },\n    Dart: {\n        color: '#00B4AB',\n    },\n    Gnuplot: {\n        color: '#f0a9f0',\n    },\n    DataWeave: {\n        color: '#003a52',\n    },\n    Dhall: {\n        color: '#dfafff',\n    },\n    'DIGITAL Command Language': {\n        color: 'inherit',\n    },\n    DM: {\n        color: '#447265',\n    },\n    Dockerfile: {\n        color: '#384d54',\n    },\n    Dogescript: {\n        color: '#cca760',\n    },\n    DTrace: {\n        color: 'inherit',\n    },\n    Dylan: {\n        color: '#6c616e',\n    },\n    E: {\n        color: '#ccce35',\n    },\n    eC: {\n        color: '#913960',\n    },\n    ECL: {\n        color: '#8a1267',\n    },\n    ECLiPSe: {\n        color: 'inherit',\n    },\n    Eiffel: {\n        color: '#4d6977',\n    },\n    EJS: {\n        color: '#a91e50',\n    },\n    Elixir: {\n        color: '#6e4a7e',\n    },\n    Elm: {\n        color: '#60B5CC',\n    },\n    'Emacs Lisp': {\n        color: '#c065db',\n    },\n    EmberScript: {\n        color: '#FFF4F3',\n    },\n    EQ: {\n        color: '#a78649',\n    },\n    Erlang: {\n        color: '#B83998',\n    },\n    'F#': {\n        color: '#b845fc',\n    },\n    'F*': {\n        color: '#572e30',\n    },\n    Factor: {\n        color: '#636746',\n    },\n    Fancy: {\n        color: '#7b9db4',\n    },\n    Fantom: {\n        color: '#14253c',\n    },\n    Faust: {\n        color: '#c37240',\n    },\n    'Filebench WML': {\n        color: 'inherit',\n    },\n    Filterscript: {\n        color: 'inherit',\n    },\n    fish: {\n        color: 'inherit',\n    },\n    FLUX: {\n        color: '#88ccff',\n    },\n    Forth: {\n        color: '#341708',\n    },\n    Fortran: {\n        color: '#4d41b1',\n    },\n    'Fortran Free Form': {\n        color: 'inherit',\n    },\n    FreeMarker: {\n        color: '#0050b2',\n    },\n    Frege: {\n        color: '#00cafe',\n    },\n    Futhark: {\n        color: '#5f021f',\n    },\n    'G-code': {\n        color: '#D08CF2',\n    },\n    'Game Maker Language': {\n        color: '#71b417',\n    },\n    GAML: {\n        color: '#FFC766',\n    },\n    GAMS: {\n        color: 'inherit',\n    },\n    GAP: {\n        color: 'inherit',\n    },\n    'GCC Machine Description': {\n        color: 'inherit',\n    },\n    GDB: {\n        color: 'inherit',\n    },\n    GDScript: {\n        color: '#355570',\n    },\n    Genie: {\n        color: '#fb855d',\n    },\n    Genshi: {\n        color: 'inherit',\n    },\n    'Gentoo Ebuild': {\n        color: 'inherit',\n    },\n    'Gentoo Eclass': {\n        color: 'inherit',\n    },\n    Gherkin: {\n        color: '#5B2063',\n    },\n    GLSL: {\n        color: 'inherit',\n    },\n    Glyph: {\n        color: '#c1ac7f',\n    },\n    Go: {\n        color: '#00ADD8',\n    },\n    Golo: {\n        color: '#88562A',\n    },\n    Gosu: {\n        color: '#82937f',\n    },\n    Grace: {\n        color: 'inherit',\n    },\n    'Grammatical Framework': {\n        color: '#ff0000',\n    },\n    GraphQL: {\n        color: '#e10098',\n    },\n    Groovy: {\n        color: '#e69f56',\n    },\n    'Groovy Server Pages': {\n        color: 'inherit',\n    },\n    Hack: {\n        color: '#878787',\n    },\n    Haml: {\n        color: '#ece2a9',\n    },\n    Handlebars: {\n        color: '#f7931e',\n    },\n    Harbour: {\n        color: '#0e60e3',\n    },\n    Haskell: {\n        color: '#5e5086',\n    },\n    Haxe: {\n        color: '#df7900',\n    },\n    HCL: {\n        color: '#00dfd4',\n    },\n    HiveQL: {\n        color: '#dce200',\n    },\n    HLSL: {\n        color: 'inherit',\n    },\n    HolyC: {\n        color: '#ffefaf',\n    },\n    HTML: {\n        color: '#e34c26',\n    },\n    Hy: {\n        color: '#7790B2',\n    },\n    HyPhy: {\n        color: 'inherit',\n    },\n    IDL: {\n        color: '#a3522f',\n    },\n    Idris: {\n        color: '#b30000',\n    },\n    'IGOR Pro': {\n        color: '#0000cc',\n    },\n    'Inform 7': {\n        color: 'inherit',\n    },\n    'Inno Setup': {\n        color: 'inherit',\n    },\n    Io: {\n        color: '#a9188d',\n    },\n    Ioke: {\n        color: '#078193',\n    },\n    Isabelle: {\n        color: '#FEFE00',\n    },\n    'Isabelle ROOT': {\n        color: 'inherit',\n    },\n    J: {\n        color: '#9EEDFF',\n    },\n    Jasmin: {\n        color: 'inherit',\n    },\n    Java: {\n        color: '#b07219',\n    },\n    'Java Server Pages': {\n        color: 'inherit',\n    },\n    JavaScript: {\n        color: '#f1e05a',\n    },\n    'JavaScript+ERB': {\n        color: 'inherit',\n    },\n    JFlex: {\n        color: '#DBCA00',\n    },\n    Jison: {\n        color: 'inherit',\n    },\n    'Jison Lex': {\n        color: 'inherit',\n    },\n    Jolie: {\n        color: '#843179',\n    },\n    JSONiq: {\n        color: '#40d47e',\n    },\n    Jsonnet: {\n        color: '#0064bd',\n    },\n    JSX: {\n        color: 'inherit',\n    },\n    Julia: {\n        color: '#a270ba',\n    },\n    'Jupyter Notebook': {\n        color: '#DA5B0B',\n    },\n    'Kaitai Struct': {\n        color: '#773b37',\n    },\n    Kotlin: {\n        color: '#F18E33',\n    },\n    KRL: {\n        color: '#28430A',\n    },\n    LabVIEW: {\n        color: 'inherit',\n    },\n    Lasso: {\n        color: '#999999',\n    },\n    Latte: {\n        color: '#f2a542',\n    },\n    Lean: {\n        color: 'inherit',\n    },\n    Less: {\n        color: '#1d365d',\n    },\n    Lex: {\n        color: '#DBCA00',\n    },\n    LFE: {\n        color: '#4C3023',\n    },\n    LilyPond: {\n        color: 'inherit',\n    },\n    Limbo: {\n        color: 'inherit',\n    },\n    'Literate Agda': {\n        color: 'inherit',\n    },\n    'Literate CoffeeScript': {\n        color: 'inherit',\n    },\n    'Literate Haskell': {\n        color: 'inherit',\n    },\n    LiveScript: {\n        color: '#499886',\n    },\n    LLVM: {\n        color: '#185619',\n    },\n    Logos: {\n        color: 'inherit',\n    },\n    Logtalk: {\n        color: 'inherit',\n    },\n    LOLCODE: {\n        color: '#cc9900',\n    },\n    LookML: {\n        color: '#652B81',\n    },\n    LoomScript: {\n        color: 'inherit',\n    },\n    LSL: {\n        color: '#3d9970',\n    },\n    Lua: {\n        color: '#000080',\n    },\n    M: {\n        color: 'inherit',\n    },\n    M4: {\n        color: 'inherit',\n    },\n    M4Sugar: {\n        color: 'inherit',\n    },\n    Macaulay2: {\n        color: '#d8ffff',\n    },\n    Makefile: {\n        color: '#427819',\n    },\n    Mako: {\n        color: 'inherit',\n    },\n    Markdown: {\n        color: '#083fa1',\n    },\n    Marko: {\n        color: '#42bff2',\n    },\n    Mask: {\n        color: '#f97732',\n    },\n    Mathematica: {\n        color: 'inherit',\n    },\n    MATLAB: {\n        color: '#e16737',\n    },\n    Max: {\n        color: '#c4a79c',\n    },\n    MAXScript: {\n        color: '#00a6a6',\n    },\n    mcfunction: {\n        color: '#E22837',\n    },\n    Mercury: {\n        color: '#ff2b2b',\n    },\n    Meson: {\n        color: '#007800',\n    },\n    Metal: {\n        color: '#8f14e9',\n    },\n    MiniD: {\n        color: 'inherit',\n    },\n    Mirah: {\n        color: '#c7a938',\n    },\n    'mIRC Script': {\n        color: '#3d57c3',\n    },\n    MLIR: {\n        color: '#5EC8DB',\n    },\n    Modelica: {\n        color: 'inherit',\n    },\n    'Modula-2': {\n        color: 'inherit',\n    },\n    'Modula-3': {\n        color: '#223388',\n    },\n    'Module Management System': {\n        color: 'inherit',\n    },\n    Monkey: {\n        color: 'inherit',\n    },\n    Moocode: {\n        color: 'inherit',\n    },\n    MoonScript: {\n        color: 'inherit',\n    },\n    'Motorola 68K Assembly': {\n        color: 'inherit',\n    },\n    MQL4: {\n        color: '#62A8D6',\n    },\n    MQL5: {\n        color: '#4A76B8',\n    },\n    MTML: {\n        color: '#b7e1f4',\n    },\n    MUF: {\n        color: 'inherit',\n    },\n    mupad: {\n        color: 'inherit',\n    },\n    Myghty: {\n        color: 'inherit',\n    },\n    NASL: {\n        color: 'inherit',\n    },\n    NCL: {\n        color: '#28431f',\n    },\n    Nearley: {\n        color: '#990000',\n    },\n    Nemerle: {\n        color: '#3d3c6e',\n    },\n    nesC: {\n        color: '#94B0C7',\n    },\n    NetLinx: {\n        color: '#0aa0ff',\n    },\n    'NetLinx+ERB': {\n        color: '#747faa',\n    },\n    NetLogo: {\n        color: '#ff6375',\n    },\n    NewLisp: {\n        color: '#87AED7',\n    },\n    Nextflow: {\n        color: '#3ac486',\n    },\n    Nim: {\n        color: '#ffc200',\n    },\n    Nit: {\n        color: '#009917',\n    },\n    Nix: {\n        color: '#7e7eff',\n    },\n    NSIS: {\n        color: 'inherit',\n    },\n    Nu: {\n        color: '#c9df40',\n    },\n    NumPy: {\n        color: '#9C8AF9',\n    },\n    'Objective-C': {\n        color: '#438eff',\n    },\n    'Objective-C++': {\n        color: '#6866fb',\n    },\n    'Objective-J': {\n        color: '#ff0c5a',\n    },\n    ObjectScript: {\n        color: '#424893',\n    },\n    OCaml: {\n        color: '#3be133',\n    },\n    Odin: {\n        color: '#60AFFE',\n    },\n    Omgrofl: {\n        color: '#cabbff',\n    },\n    ooc: {\n        color: '#b0b77e',\n    },\n    Opa: {\n        color: 'inherit',\n    },\n    Opal: {\n        color: '#f7ede0',\n    },\n    'Open Policy Agent': {\n        color: 'inherit',\n    },\n    OpenCL: {\n        color: 'inherit',\n    },\n    'OpenEdge ABL': {\n        color: 'inherit',\n    },\n    OpenQASM: {\n        color: '#AA70FF',\n    },\n    'OpenRC runscript': {\n        color: 'inherit',\n    },\n    OpenSCAD: {\n        color: 'inherit',\n    },\n    Ox: {\n        color: 'inherit',\n    },\n    Oxygene: {\n        color: '#cdd0e3',\n    },\n    Oz: {\n        color: '#fab738',\n    },\n    P4: {\n        color: '#7055b5',\n    },\n    Pan: {\n        color: '#cc0000',\n    },\n    Papyrus: {\n        color: '#6600cc',\n    },\n    Parrot: {\n        color: '#f3ca0a',\n    },\n    'Parrot Assembly': {\n        color: 'inherit',\n    },\n    'Parrot Internal Representation': {\n        color: 'inherit',\n    },\n    Pascal: {\n        color: '#E3F171',\n    },\n    Pawn: {\n        color: '#dbb284',\n    },\n    Pep8: {\n        color: '#C76F5B',\n    },\n    Perl: {\n        color: '#0298c3',\n    },\n    PHP: {\n        color: '#4F5D95',\n    },\n    PicoLisp: {\n        color: 'inherit',\n    },\n    PigLatin: {\n        color: '#fcd7de',\n    },\n    Pike: {\n        color: '#005390',\n    },\n    PLpgSQL: {\n        color: 'inherit',\n    },\n    PLSQL: {\n        color: '#dad8d8',\n    },\n    PogoScript: {\n        color: '#d80074',\n    },\n    Pony: {\n        color: 'inherit',\n    },\n    PostScript: {\n        color: '#da291c',\n    },\n    'POV-Ray SDL': {\n        color: 'inherit',\n    },\n    PowerBuilder: {\n        color: '#8f0f8d',\n    },\n    PowerShell: {\n        color: '#012456',\n    },\n    Prisma: {\n        color: '#0c344b',\n    },\n    Processing: {\n        color: '#0096D8',\n    },\n    Prolog: {\n        color: '#74283c',\n    },\n    'Propeller Spin': {\n        color: '#7fa2a7',\n    },\n    Pug: {\n        color: '#a86454',\n    },\n    Puppet: {\n        color: '#302B6D',\n    },\n    PureBasic: {\n        color: '#5a6986',\n    },\n    PureScript: {\n        color: '#1D222D',\n    },\n    Python: {\n        color: '#3572A5',\n    },\n    'Python console': {\n        color: 'inherit',\n    },\n    q: {\n        color: '#0040cd',\n    },\n    'Q#': {\n        color: '#fed659',\n    },\n    QMake: {\n        color: 'inherit',\n    },\n    QML: {\n        color: '#44a51c',\n    },\n    'Qt Script': {\n        color: '#00b841',\n    },\n    Quake: {\n        color: '#882233',\n    },\n    R: {\n        color: '#198CE7',\n    },\n    Racket: {\n        color: '#3c5caa',\n    },\n    Ragel: {\n        color: '#9d5200',\n    },\n    Raku: {\n        color: '#0000fb',\n    },\n    RAML: {\n        color: '#77d9fb',\n    },\n    Rascal: {\n        color: '#fffaa0',\n    },\n    REALbasic: {\n        color: 'inherit',\n    },\n    Reason: {\n        color: '#ff5847',\n    },\n    Rebol: {\n        color: '#358a5b',\n    },\n    Red: {\n        color: '#f50000',\n    },\n    Redcode: {\n        color: 'inherit',\n    },\n    \"Ren'Py\": {\n        color: '#ff7f7f',\n    },\n    RenderScript: {\n        color: 'inherit',\n    },\n    REXX: {\n        color: 'inherit',\n    },\n    Ring: {\n        color: '#2D54CB',\n    },\n    Riot: {\n        color: '#A71E49',\n    },\n    RobotFramework: {\n        color: 'inherit',\n    },\n    Roff: {\n        color: '#ecdebe',\n    },\n    Rouge: {\n        color: '#cc0088',\n    },\n    RPC: {\n        color: 'inherit',\n    },\n    Ruby: {\n        color: '#701516',\n    },\n    RUNOFF: {\n        color: '#665a4e',\n    },\n    Rust: {\n        color: '#dea584',\n    },\n    Sage: {\n        color: 'inherit',\n    },\n    SaltStack: {\n        color: '#646464',\n    },\n    SAS: {\n        color: '#B34936',\n    },\n    Sass: {\n        color: '#a53b70',\n    },\n    Scala: {\n        color: '#c22d40',\n    },\n    Scheme: {\n        color: '#1e4aec',\n    },\n    Scilab: {\n        color: 'inherit',\n    },\n    SCSS: {\n        color: '#c6538c',\n    },\n    sed: {\n        color: '#64b970',\n    },\n    Self: {\n        color: '#0579aa',\n    },\n    ShaderLab: {\n        color: 'inherit',\n    },\n    Shell: {\n        color: '#89e051',\n    },\n    ShellSession: {\n        color: 'inherit',\n    },\n    Shen: {\n        color: '#120F14',\n    },\n    Sieve: {\n        color: 'inherit',\n    },\n    Slash: {\n        color: '#007eff',\n    },\n    Slice: {\n        color: '#003fa2',\n    },\n    Slim: {\n        color: '#2b2b2b',\n    },\n    Smali: {\n        color: 'inherit',\n    },\n    Smalltalk: {\n        color: '#596706',\n    },\n    Smarty: {\n        color: '#bedf00',\n    },\n    SmPL: {\n        color: '#c94949',\n    },\n    SMT: {\n        color: 'inherit',\n    },\n    Solidity: {\n        color: '#AA6746',\n    },\n    SourcePawn: {\n        color: '#f69e1d',\n    },\n    SQF: {\n        color: '#3F3F3F',\n    },\n    SQLPL: {\n        color: 'inherit',\n    },\n    Squirrel: {\n        color: '#800000',\n    },\n    'SRecode Template': {\n        color: '#348a34',\n    },\n    Stan: {\n        color: '#b2011d',\n    },\n    'Standard ML': {\n        color: '#dc566d',\n    },\n    Starlark: {\n        color: '#76d275',\n    },\n    Stata: {\n        color: 'inherit',\n    },\n    Stylus: {\n        color: '#ff6347',\n    },\n    SuperCollider: {\n        color: '#46390b',\n    },\n    Svelte: {\n        color: '#ff3e00',\n    },\n    SVG: {\n        color: '#ff9900',\n    },\n    Swift: {\n        color: '#ffac45',\n    },\n    SWIG: {\n        color: 'inherit',\n    },\n    SystemVerilog: {\n        color: '#DAE1C2',\n    },\n    Tcl: {\n        color: '#e4cc98',\n    },\n    Tcsh: {\n        color: 'inherit',\n    },\n    Terra: {\n        color: '#00004c',\n    },\n    TeX: {\n        color: '#3D6117',\n    },\n    Thrift: {\n        color: 'inherit',\n    },\n    'TI Program': {\n        color: '#A0AA87',\n    },\n    TLA: {\n        color: 'inherit',\n    },\n    TSQL: {\n        color: 'inherit',\n    },\n    TSX: {\n        color: 'inherit',\n    },\n    Turing: {\n        color: '#cf142b',\n    },\n    Twig: {\n        color: '#c1d026',\n    },\n    TXL: {\n        color: 'inherit',\n    },\n    TypeScript: {\n        color: '#2b7489',\n    },\n    'Unified Parallel C': {\n        color: '#4e3617',\n    },\n    'Unix Assembly': {\n        color: 'inherit',\n    },\n    Uno: {\n        color: '#9933cc',\n    },\n    UnrealScript: {\n        color: '#a54c4d',\n    },\n    UrWeb: {\n        color: 'inherit',\n    },\n    V: {\n        color: '#4f87c4',\n    },\n    Vala: {\n        color: '#fbe5cd',\n    },\n    VBA: {\n        color: '#867db1',\n    },\n    VBScript: {\n        color: '#15dcdc',\n    },\n    VCL: {\n        color: '#148AA8',\n    },\n    Verilog: {\n        color: '#b2b7f8',\n    },\n    VHDL: {\n        color: '#adb2cb',\n    },\n    'Vim script': {\n        color: '#199f4b',\n    },\n    'Visual Basic .NET': {\n        color: '#945db7',\n    },\n    Volt: {\n        color: '#1F1F1F',\n    },\n    Vue: {\n        color: '#2c3e50',\n    },\n    wdl: {\n        color: '#42f1f4',\n    },\n    WebAssembly: {\n        color: '#04133b',\n    },\n    WebIDL: {\n        color: 'inherit',\n    },\n    wisp: {\n        color: '#7582D1',\n    },\n    Wollok: {\n        color: '#a23738',\n    },\n    X10: {\n        color: '#4B6BEF',\n    },\n    xBase: {\n        color: '#403a40',\n    },\n    XC: {\n        color: '#99DA07',\n    },\n    Xojo: {\n        color: 'inherit',\n    },\n    XProc: {\n        color: 'inherit',\n    },\n    XQuery: {\n        color: '#5232e7',\n    },\n    XS: {\n        color: 'inherit',\n    },\n    XSLT: {\n        color: '#EB8CEB',\n    },\n    Xtend: {\n        color: 'inherit',\n    },\n    Yacc: {\n        color: '#4B6C4B',\n    },\n    YAML: {\n        color: '#cb171e',\n    },\n    YARA: {\n        color: '#220000',\n    },\n    YASnippet: {\n        color: '#32AB90',\n    },\n    ZAP: {\n        color: '#0d665e',\n    },\n    Zeek: {\n        color: 'inherit',\n    },\n    ZenScript: {\n        color: '#00BCD1',\n    },\n    Zephir: {\n        color: '#118f9e',\n    },\n    Zig: {\n        color: '#ec915c',\n    },\n    ZIL: {\n        color: '#dc75e5',\n    },\n    Zimpl: {\n        color: 'inherit',\n    },\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport { InfoCard, Progress } from '@backstage/core-components';\nimport { GitlabCIApiRef } from '../../../api';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useAsync } from 'react-use';\nimport {\n    gitlabInstance,\n    gitlabProjectId,\n    gitlabProjectSlug,\n} from '../../gitlabAppData';\nimport { Chip, Tooltip } from '@material-ui/core';\nimport { colors } from './colors';\nimport { Languages } from '../../types';\n\nconst useStyles = makeStyles((theme) => ({\n    infoCard: {\n        marginBottom: theme.spacing(3),\n        '& + .MuiAlert-root': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    barContainer: {\n        height: theme.spacing(2),\n        marginBottom: theme.spacing(3),\n        borderRadius: '4px',\n        backgroundColor: 'transparent',\n        overflow: 'hidden',\n    },\n    bar: {\n        height: '100%',\n        position: 'relative',\n    },\n    languageDot: {\n        width: '10px',\n        height: '10px',\n        borderRadius: '50%',\n        marginRight: theme.spacing(1),\n        display: 'inline-block',\n    },\n    label: {\n        color: 'inherit',\n    },\n}));\n\nexport const LanguagesCard = ({}) => {\n    const classes = useStyles();\n    let barWidth = 0;\n    let languageTitle = new String();\n    const project_id = gitlabProjectId();\n    const project_slug = gitlabProjectSlug();\n    const gitlab_instance = gitlabInstance();\n\n    const GitlabCIAPI = useApi(GitlabCIApiRef).build(\n        gitlab_instance || 'gitlab.com'\n    );\n\n    const { value, loading, error } = useAsync(async (): Promise<Languages> => {\n        const projectDetails = await GitlabCIAPI.getProjectDetails(\n            project_slug || project_id\n        );\n\n        if (!projectDetails)\n            throw new Error('wrong project_slug or project_id');\n\n        const summary = await GitlabCIAPI.getLanguagesSummary(\n            projectDetails.id\n        );\n        if (!summary) throw new Error('Languages summary is not defined!');\n\n        return summary;\n    });\n\n    if (loading) {\n        return <Progress />;\n    } else if (error) {\n        return (\n            <Alert severity=\"error\" className={classes.infoCard}>\n                {error.message}\n            </Alert>\n        );\n    }\n\n    return value ? (\n        <InfoCard title=\"Languages\">\n            <div className={classes.barContainer}>\n                {Object.entries(value).map((language, index: number) => {\n                    barWidth = barWidth + language[1];\n                    languageTitle = language[0] + ' ' + language[1] + '%';\n                    return (\n                        <Tooltip\n                            title={languageTitle}\n                            placement=\"bottom-end\"\n                            key={language[0]}\n                        >\n                            <div\n                                className={classes.bar}\n                                key={language[0]}\n                                style={{\n                                    marginTop: index === 0 ? '0' : `-16px`,\n                                    zIndex: Object.keys(value).length - index,\n                                    backgroundColor:\n                                        colors[language[0]]?.color || '#333',\n                                    width: `${barWidth}%`,\n                                }}\n                            />\n                        </Tooltip>\n                    );\n                })}\n            </div>\n            {Object.entries(value).map((language) => (\n                <Chip\n                    classes={{\n                        label: classes.label,\n                    }}\n                    label={\n                        <>\n                            <span\n                                className={classes.languageDot}\n                                style={{\n                                    backgroundColor:\n                                        colors[language[0]]?.color || '#333',\n                                }}\n                            />\n                            <b>{language[0]}</b> - {language[1]}%\n                        </>\n                    }\n                    variant=\"outlined\"\n                    key={language[0]}\n                />\n            ))}\n        </InfoCard>\n    ) : (\n        <InfoCard title=\"Languages\" />\n    );\n};\n","import React from 'react';\nimport { Avatar, Tooltip } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { PeopleCardEntityData } from '../../../../types';\n\ntype Props = {\n    peopleCardEntity: PeopleCardEntityData;\n};\n\nconst LightTooltip = withStyles({\n    tooltip: {\n        backgroundColor: 'white',\n        border: '1px solid lightgrey',\n        color: '#333',\n        minWidth: '320px',\n    },\n})(Tooltip);\n\nexport const PeopleCardEntity = ({ peopleCardEntity }: Props) => {\n    return (\n        <LightTooltip title={peopleCardEntity.name}>\n            <a href={peopleCardEntity.web_url} target=\"_blank\">\n                <Avatar\n                    key={peopleCardEntity.name}\n                    alt={peopleCardEntity.name}\n                    src={peopleCardEntity.avatar_url}\n                />\n            </a>\n        </LightTooltip>\n    );\n};\n","import React from 'react';\nimport { Grid, Box } from '@material-ui/core';\nimport { Link } from '@backstage/core-components';\nimport { PeopleCardEntity } from '../PeopleCardEntity';\nimport { PeopleCardEntityData, PeopleLink } from '../../../../types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowIcon from '@material-ui/icons/ArrowForward';\n\ninterface PeopleListProps {\n    title: string;\n    peopleObj: PeopleCardEntityData[];\n    deepLink?: PeopleLink;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: 'inherit',\n        textDecoration: 'none',\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(0),\n    },\n    box: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n    boxLink: {\n        marginTop: theme.spacing(0),\n    },\n    title: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(0),\n    },\n}));\n\nexport const PeopleList = ({ title, peopleObj, deepLink }: PeopleListProps) => {\n    const classes = useStyles();\n    return (\n        <>\n            <Box\n                className={classes.box}\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n            >\n                <h2 className={classes.title}>{title}</h2>\n                {deepLink && (\n                    <Box\n                        className={classes.boxLink}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                    >\n                        <Link\n                            className={classes.link}\n                            to={deepLink.link}\n                            onClick={deepLink.onClick}\n                        >\n                            {deepLink.title}\n                        </Link>\n                        <ArrowIcon fontSize=\"small\"></ArrowIcon>\n                    </Box>\n                )}\n            </Box>\n            <Grid container spacing={1} justifyContent=\"flex-start\">\n                {peopleObj?.map((peopleCardEntity: PeopleCardEntityData) => (\n                    <Grid\n                        key={peopleCardEntity.email || peopleCardEntity.name}\n                        item\n                    >\n                        <PeopleCardEntity peopleCardEntity={peopleCardEntity} />\n                    </Grid>\n                ))}\n            </Grid>\n        </>\n    );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport { InfoCard, Progress } from '@backstage/core-components';\nimport { GitlabCIApiRef } from '../../../api';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useAsync } from 'react-use';\nimport {\n    gitlabProjectId,\n    gitlabProjectSlug,\n    gitlabCodeOwnerPath,\n    gitlabInstance,\n} from '../../gitlabAppData';\nimport { PeopleList } from './components/PeopleList';\nimport { PeopleCardEntityData, PeopleLink } from '../../types';\nimport { Divider } from '@material-ui/core';\nimport { ProjectSchema } from '@gitbeaker/rest';\n\nconst useStyles = makeStyles((theme) => ({\n    infoCard: {\n        marginBottom: theme.spacing(3),\n        '& + .MuiAlert-root': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    subTitle: {\n        marginTop: theme.spacing(0),\n    },\n    divider: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nexport const PeopleCard = ({}) => {\n    const classes = useStyles();\n    const project_id = gitlabProjectId();\n    const project_slug = gitlabProjectSlug();\n    const gitlab_instance = gitlabInstance();\n    const codeowners_path = gitlabCodeOwnerPath();\n\n    const GitlabCIAPI = useApi(GitlabCIApiRef).build(\n        gitlab_instance || 'gitlab.com'\n    );\n    /* TODO: to change the below logic to get contributors data*/\n    const { value, loading, error } = useAsync(async (): Promise<{\n        contributors: PeopleCardEntityData[] | undefined;\n        owners: PeopleCardEntityData[] | undefined;\n        projectDetails: ProjectSchema;\n    }> => {\n        const projectDetails = await GitlabCIAPI.getProjectDetails(\n            project_slug || project_id\n        );\n        if (!projectDetails)\n            throw new Error('wrong project_slug or project_id');\n\n        const contributorData = await GitlabCIAPI.getContributorsSummary(\n            projectDetails.id\n        );\n\n        // CODE OWNERS\n        let codeOwners: PeopleCardEntityData[] | undefined = [];\n        try {\n            codeOwners = await GitlabCIAPI.getCodeOwners(\n                projectDetails.id,\n                projectDetails?.default_branch,\n                codeowners_path\n            );\n        } catch (error) {\n            codeOwners = undefined;\n        }\n        return {\n            contributors: contributorData!,\n            owners: codeOwners,\n            projectDetails,\n        };\n    }, []);\n\n    const project_web_url = value?.projectDetails?.web_url;\n    const project_default_branch = value?.projectDetails?.default_branch;\n\n    let contributorsDeepLink: PeopleLink | undefined;\n    let ownersDeepLink: PeopleLink | undefined;\n    if (project_web_url && project_default_branch) {\n        const contributorsLink = GitlabCIAPI.getContributorsLink(\n            project_web_url,\n            project_default_branch\n        );\n        contributorsDeepLink = {\n            link: contributorsLink,\n            title: 'go to Contributors',\n            onClick: (e) => {\n                e.preventDefault();\n                window.open(contributorsLink);\n            },\n        };\n\n        const ownersLink = GitlabCIAPI.getOwnersLink(\n            project_web_url,\n            project_default_branch,\n            codeowners_path\n        );\n        ownersDeepLink = {\n            link: ownersLink,\n            title: 'go to Owners File',\n            onClick: (e) => {\n                e.preventDefault();\n                window.open(ownersLink);\n            },\n        };\n    }\n\n    if (loading) {\n        return <Progress />;\n    } else if (error) {\n        return (\n            <Alert severity=\"error\" className={classes.infoCard}>\n                {error.message}\n            </Alert>\n        );\n    }\n    return (\n        <InfoCard title=\"People\" className={classes.infoCard}>\n            {value?.owners && (\n                <>\n                    <PeopleList\n                        title=\"Owners\"\n                        peopleObj={value?.owners}\n                        deepLink={ownersDeepLink}\n                    />\n                    <Divider className={classes.divider}></Divider>\n                </>\n            )}\n\n            <PeopleList\n                title=\"Contributors\"\n                peopleObj={value?.contributors || []}\n                deepLink={contributorsDeepLink}\n            />\n        </InfoCard>\n    );\n};\n","import React, { useState } from 'react';\nimport { Progress } from '@backstage/core-components';\nimport {\n    Box,\n    makeStyles,\n    FormControl,\n    FormHelperText,\n    Select,\n    MenuItem,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { useAsync } from 'react-use';\nimport {\n    gitlabInstance,\n    gitlabProjectId,\n    gitlabProjectSlug,\n} from '../../gitlabAppData';\nimport { GitlabCIApiRef } from '../../../api';\nimport { useApi } from '@backstage/core-plugin-api';\nimport {\n    InfoCard,\n    StructuredMetadataTable,\n    InfoCardVariants,\n} from '@backstage/core-components';\nimport dayjs from 'dayjs';\nimport { Entity } from '@backstage/catalog-model';\nimport { MergeRequestSchema } from '@gitbeaker/rest';\n\nconst useStyles = makeStyles((theme) => ({\n    infoCard: {\n        marginBottom: theme.spacing(3),\n        '& + .MuiAlert-root': {\n            marginTop: theme.spacing(3),\n        },\n        '& .MuiCardContent-root': {\n            padding: theme.spacing(2, 1, 2, 2),\n        },\n        '& td': {\n            whiteSpace: 'normal',\n        },\n    },\n}));\n\nexport type MergeRequestStatsCount = {\n    avgTimeUntilMerge: number;\n    closedCount: number;\n    mergedCount: number;\n};\n\ntype Props = {\n    entity?: Entity;\n    variant?: InfoCardVariants;\n};\n\nfunction evalStats(mergeRequestStatusData: MergeRequestSchema[]) {\n    let sumOfDiff = 0;\n    let closedCount = 0;\n    let mergedCount = 0;\n\n    mergeRequestStatusData?.forEach((element) => {\n        sumOfDiff += element.merged_at\n            ? new Date(element.merged_at).getTime() -\n              new Date(element.created_at).getTime()\n            : 0;\n        mergedCount += element.merged_at ? 1 : 0;\n        closedCount += element.closed_at ? 1 : 0;\n    });\n\n    const avgTimeUntilMergeDiff = dayjs.duration(sumOfDiff / mergedCount);\n\n    return {\n        avgTimeUntilMerge: avgTimeUntilMergeDiff,\n        mergedCount,\n        closedCount,\n    };\n}\n\nconst MergeRequestStats = (props: Props) => {\n    const [count, setCount] = useState<number>(20);\n    const classes = useStyles();\n    const project_id = gitlabProjectId();\n    const project_slug = gitlabProjectSlug();\n    const gitlab_instance = gitlabInstance();\n\n    const GitlabCIAPI = useApi(GitlabCIApiRef).build(\n        gitlab_instance || 'gitlab.com'\n    );\n\n    const { value, loading, error } = useAsync(async () => {\n        const projectDetails = await GitlabCIAPI.getProjectDetails(\n            project_slug || project_id\n        );\n        if (!projectDetails)\n            throw new Error('wrong project_slug or project_id');\n\n        const mergeRequestStatusData =\n            await GitlabCIAPI.getMergeRequestsStatusSummary(\n                projectDetails.id,\n                count\n            );\n\n        if (!mergeRequestStatusData)\n            throw new Error('getMergeRequestsStatusSummary error');\n\n        const stats = evalStats(mergeRequestStatusData);\n\n        if (stats.mergedCount === 0)\n            return {\n                avgTimeUntilMerge: 'Never',\n                mergedToTotalRatio: '0%',\n            };\n\n        return {\n            avgTimeUntilMerge: stats.avgTimeUntilMerge.humanize(),\n            mergedToTotalRatio: `${Math.round(\n                (stats.mergedCount / count) * 100\n            )}%`,\n        };\n    }, [count]);\n\n    if (loading) {\n        return <Progress />;\n    } else if (error) {\n        return <Alert severity=\"error\">{error.message}</Alert>;\n    }\n\n    return value ? (\n        <InfoCard\n            title=\"Merge requests statistics\"\n            className={classes.infoCard}\n            variant={props.variant}\n        >\n            {/*   <Box position=\"relative\">\n                    <div> <b>Average time of MR until merge :</b> {value.avgTimeUntilMerge}</div>\n                    <div> <b>Merged to closed ratio :</b> {value.mergedToClosedRatio}</div>\n                    <>Number of MRs : 20</>\n                </Box>*/}\n\n            <Box position=\"relative\">\n                <StructuredMetadataTable metadata={value} />\n                <Box display=\"flex\" justifyContent=\"flex-end\">\n                    <FormControl>\n                        <Select\n                            value={count}\n                            onChange={(event) =>\n                                setCount(Number(event.target.value))\n                            }\n                        >\n                            <MenuItem value={10}>10</MenuItem>\n                            <MenuItem value={20}>20</MenuItem>\n                            <MenuItem value={50}>50</MenuItem>\n                            <MenuItem value={100}>100</MenuItem>\n                        </Select>\n                        <FormHelperText>Number of MRs</FormHelperText>\n                    </FormControl>\n                </Box>\n            </Box>\n        </InfoCard>\n    ) : (\n        <InfoCard title=\"Merge Request Statistics\" />\n    );\n};\n\nexport default MergeRequestStats;\n","import React from 'react';\nimport { makeStyles, Tooltip } from '@material-ui/core';\nimport type { MergeRequestSchema } from '@gitbeaker/rest';\nconst useStyles = makeStyles(() => ({\n    open: {\n        fill: '#22863a',\n    },\n    closed: {\n        fill: '#cb2431',\n    },\n    merged: {\n        fill: '#6f42c1',\n    },\n    draft: {\n        fill: '#6a737d',\n    },\n}));\n\nconst StatusOpen = () => {\n    const classes = useStyles();\n    return (\n        <svg\n            width=\"16\"\n            height=\"16\"\n            className={classes.open}\n            viewBox=\"0 0 16 16\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                d=\"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z\"\n            />\n        </svg>\n    );\n};\n\nconst StatusClosed = () => {\n    const classes = useStyles();\n    return (\n        <svg\n            width=\"16\"\n            height=\"16\"\n            className={classes.closed}\n            viewBox=\"0 0 16 16\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                d=\"M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z\"\n            />\n        </svg>\n    );\n};\n\nconst StatusMerged = () => {\n    const classes = useStyles();\n    return (\n        <svg\n            width=\"16\"\n            height=\"16\"\n            className={classes.merged}\n            viewBox=\"0 0 16 16\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                d=\"M5 3.254V3.25v.005a.75.75 0 110-.005v.004zm.45 1.9a2.25 2.25 0 10-1.95.218v5.256a2.25 2.25 0 101.5 0V7.123A5.735 5.735 0 009.25 9h1.378a2.251 2.251 0 100-1.5H9.25a4.25 4.25 0 01-3.8-2.346zM12.75 9a.75.75 0 100-1.5.75.75 0 000 1.5zm-8.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5z\"\n            />\n        </svg>\n    );\n};\n\nexport const getStatusIconType = (row: MergeRequestSchema) => {\n    switch (true) {\n        case row.state === 'opened':\n            return (\n                <Tooltip title=\"Open\">\n                    <span>\n                        <StatusOpen />\n                    </span>\n                </Tooltip>\n            );\n        case row.state === 'locked':\n            return (\n                <Tooltip title=\"Open\">\n                    <span>\n                        <StatusOpen />\n                    </span>\n                </Tooltip>\n            );\n        case row.state === 'merged':\n            return (\n                <Tooltip title=\"Merged\">\n                    <span>\n                        <StatusMerged />\n                    </span>\n                </Tooltip>\n            );\n        case row.state === 'closed':\n            return (\n                <Tooltip title=\"Closed\">\n                    <span>\n                        <StatusClosed />\n                    </span>\n                </Tooltip>\n            );\n        default:\n            return null;\n    }\n};\n","/*\n * Copyright 2022 Nokia\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link, Grid } from '@material-ui/core';\nimport LocalOfferOutlinedIcon from '@material-ui/icons/LocalOfferOutlined';\nimport Alert from '@material-ui/lab/Alert';\nimport { InfoCard, Progress } from '@backstage/core-components';\nimport { GitlabCIApiRef } from '../../../api';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useAsync } from 'react-use';\nimport {\n    gitlabProjectId,\n    gitlabProjectSlug,\n    gitlabInstance,\n} from '../../gitlabAppData';\nimport { rcompare, valid, prerelease } from 'semver';\nimport { ReleaseSchema } from '@gitbeaker/rest';\n\nconst useStyles = makeStyles((theme) => ({\n    infoCard: {\n        marginBottom: theme.spacing(3),\n        '& + .MuiAlert-root': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    releaseTitle: {\n        ...theme.typography.h6,\n        margin: 0,\n        marginRight: '0.5rem',\n    },\n    releaseTagIcon: {\n        verticalAlign: 'middle',\n    },\n}));\n\n/**\n * Properties for {@link ReleasesCard}\n *\n * @public\n */\nexport interface ReleasesCardProps {\n    /**\n     * Filter\n     *\n     * all - show all releases (default)\n     * patch - major, minor, patch - no pre-releases\n     *\n     */\n    show?: string;\n    /**\n     * Limit - show only a maximum number of releases\n     */\n    limit?: number;\n}\n\nfunction makeFilter(\n    show: string\n): (value: ReleaseSchema, index: number, array: ReleaseSchema[]) => boolean {\n    switch (show) {\n        case 'patch':\n            return (value) => {\n                try {\n                    return prerelease(value.tag_name) === null;\n                } catch (error) {\n                    return true;\n                }\n            };\n        case 'all':\n        default:\n            return () => true;\n    }\n}\n\n/**\n * ReleasesCard\n *\n * @public\n */\nexport const ReleasesCard = (props: ReleasesCardProps) => {\n    const { show = 'all', limit = 6 } = props;\n    const classes = useStyles();\n    const project_id = gitlabProjectId();\n    const project_slug = gitlabProjectSlug();\n    const gitlab_instance = gitlabInstance();\n\n    const GitlabCIAPI = useApi(GitlabCIApiRef).build(\n        gitlab_instance || 'gitlab.com'\n    );\n    /* TODO: to change the below logic to get contributors data*/\n    const { value, loading, error } = useAsync(async () => {\n        const projectDetails = await GitlabCIAPI.getProjectDetails(\n            project_slug || project_id\n        );\n\n        if (!projectDetails)\n            throw new Error('wrong project_slug or project_id');\n\n        const releaseData = await GitlabCIAPI.getReleasesSummary(\n            projectDetails.id\n        );\n\n        if (!releaseData) throw new Error('Release data are undefined!');\n\n        return {\n            releases: releaseData,\n            projectDetails,\n        };\n    }, []);\n\n    const project_web_url = value?.projectDetails.web_url;\n\n    if (loading) {\n        return <Progress />;\n    } else if (error) {\n        return (\n            <Alert severity=\"error\" className={classes.infoCard}>\n                {error.message}\n            </Alert>\n        );\n    }\n\n    // shortest prefix match to dedupe the list, i.e.\n    // prefer full releases, e.g. when v1.2.3 exists, we drop all pre-releases v1.2.3-*\n    // prefer the latest in a series of pre-releases\n    let releases: ReleaseSchema[] = [];\n    // sort (e.g. v1.2.3 comes before v1.2.3-alpha-4.5) and walk through list of releases\n    // NOTE: rcompare sorts descending, but full release comes before release candidates (v1.2.3 before v1.2.3-alpha-4.5)\n    // use string comparison for non-compliant tags\n    if (value?.releases != null) {\n        value?.releases\n            .filter(makeFilter(show))\n            .sort((a, b) => {\n                try {\n                    return rcompare(a.tag_name, b.tag_name);\n                } catch (error) {\n                    return a.tag_name > b.tag_name ? 1 : -1;\n                }\n            })\n            .forEach((release) => {\n                // always add invalid release names\n                if (!valid(release.tag_name)) {\n                    releases.push(release);\n                    return;\n                }\n                // see if there's already a release whose tag_name is a prefix of the current item's tag_name\n                const idx = releases.findIndex((value) => {\n                    return release.tag_name.startsWith(value.tag_name);\n                });\n                // if no item was found, the version is not yet in the list\n                if (idx < 0) releases.push(release);\n            });\n    }\n    // sort the remaining releases in descending order (latest release first)\n    releases = releases\n        .sort((a, b) => {\n            try {\n                return rcompare(a.tag_name, b.tag_name);\n            } catch (error) {\n                return a.tag_name > b.tag_name ? -1 : 1;\n            }\n        })\n        .slice(0, limit);\n\n    if (releases.length === 0) {\n        return <></>;\n    }\n\n    return (\n        <InfoCard\n            title=\"Releases\"\n            deepLink={{\n                link: `${project_web_url}/-/releases`,\n                title: 'go to Releases',\n                onClick: (e) => {\n                    e.preventDefault();\n                    window.open(`${project_web_url}/-/releases`);\n                },\n            }}\n            className={classes.infoCard}\n        >\n            <Grid container spacing={2} justifyContent=\"flex-start\">\n                {releases.map((release) => (\n                    <Grid item key={release.tag_name}>\n                        <Link\n                            href={\n                                project_web_url +\n                                '/-/releases/' +\n                                release.tag_name\n                            }\n                            color=\"inherit\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <div className={classes.releaseTitle}>\n                                {release.name}\n                            </div>\n                            <LocalOfferOutlinedIcon\n                                fontSize=\"inherit\"\n                                className={classes.releaseTagIcon}\n                            />\n                            {release.tag_name}\n                        </Link>\n                    </Grid>\n                ))}\n            </Grid>\n        </InfoCard>\n    );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport {\n    InfoCard,\n    Progress,\n    MarkdownContent,\n} from '@backstage/core-components';\nimport { GitlabCIApiRef } from '../../../api';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { useAsync } from 'react-use';\nimport {\n    gitlabProjectId,\n    gitlabProjectSlug,\n    gitlabReadmePath,\n    gitlabInstance,\n} from '../../gitlabAppData';\n\nconst useStyles = makeStyles((theme) => ({\n    infoCard: {\n        marginBottom: theme.spacing(3),\n        '& + .MuiAlert-root': {\n            marginTop: theme.spacing(3),\n        },\n    },\n}));\n\nexport const ReadmeCard = ({}) => {\n    const classes = useStyles();\n    const project_id = gitlabProjectId();\n    const project_slug = gitlabProjectSlug();\n    const gitlab_instance = gitlabInstance();\n    const readme_path = gitlabReadmePath();\n\n    const GitlabCIAPI = useApi(GitlabCIApiRef).build(\n        gitlab_instance || 'gitlab.com'\n    );\n\n    const { value, loading, error } = useAsync(async (): Promise<{\n        readme: string | undefined;\n    }> => {\n        const projectDetails = await GitlabCIAPI.getProjectDetails(\n            project_slug || project_id\n        );\n\n        if (!projectDetails)\n            throw new Error('wrong project_slug or project_id');\n\n        let readmeData: string | undefined = undefined;\n        try {\n            readmeData = await GitlabCIAPI.getReadme(\n                projectDetails.id,\n                projectDetails.default_branch,\n                readme_path\n            );\n        } catch (error) {\n            readmeData = undefined;\n        }\n        return {\n            readme: readmeData,\n        };\n    }, []);\n\n    if (loading) {\n        return <Progress />;\n    } else if (error) {\n        return (\n            <Alert severity=\"error\" className={classes.infoCard}>\n                {error.message}\n            </Alert>\n        );\n    }\n\n    return (\n        <InfoCard title=\"README\" className={classes.infoCard}>\n            <MarkdownContent\n                content={value?.readme || 'No README found'}\n                dialect=\"gfm\"\n            />\n        </InfoCard>\n    );\n};\n","import React from 'react';\n\nimport { Entity } from '@backstage/catalog-model';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { GitlabCI } from './GitlabCI';\nimport {\n    LinkButton,\n    MissingAnnotationEmptyState,\n} from '@backstage/core-components';\n\nimport {\n    GITLAB_ANNOTATION_PROJECT_ID,\n    GITLAB_ANNOTATION_PROJECT_SLUG,\n} from './gitlabAppData';\nexport * from './gitlabAppData';\n\nexport const isGitlabAvailable = (entity: Entity) =>\n    isGitlabProjectIDAnnotationAvailable(entity) ||\n    isGitlabSlugAnnotationAvailable(entity);\n\nexport const isGitlabProjectIDAnnotationAvailable = (entity: Entity) =>\n    Boolean(entity.metadata.annotations?.[GITLAB_ANNOTATION_PROJECT_ID]);\n\nexport const isGitlabSlugAnnotationAvailable = (entity: Entity) =>\n    Boolean(entity.metadata.annotations?.[GITLAB_ANNOTATION_PROJECT_SLUG]);\n\nexport const Router = () => {\n    const { entity } = useEntity();\n\n    if (isGitlabAvailable(entity)) {\n        return <GitlabCI />;\n    }\n\n    return (\n        <>\n            <MissingAnnotationEmptyState\n                annotation={GITLAB_ANNOTATION_PROJECT_ID}\n            />\n            <MissingAnnotationEmptyState\n                annotation={GITLAB_ANNOTATION_PROJECT_SLUG}\n            />\n            <LinkButton\n                variant=\"contained\"\n                color=\"primary\"\n                to=\"https://github.com/immobiliare/backstage-plugin-gitlab/blob/main/README.md\"\n            >\n                Read Gitlab Plugin Docs\n            </LinkButton>\n        </>\n    );\n};\n"],"names":["duration","useStyles","error","makeStyles","value","Link"],"mappings":"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"}