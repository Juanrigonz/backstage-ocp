{"version":3,"file":"static/8943.7ef8c50d.chunk.js","mappings":"gTASA,MAAMA,EAAWC,GAAU,CACzB,IAAIC,EACJ,MAAMC,KAAa,MAAO,IAAa,EACjCC,KAAqB,MAAY,IAAc,EAC/C,CAAE,gBAAAC,EAAiB,oBAAAC,CAAoB,KAAI,MAAmB,EAC9DC,KAAW,WAAS,SAAY,CACpC,GAAI,CAACF,EAAgB,KACnB,MAAO,CAAC,EAEV,MAAMG,EAAS,CAAC,GAAGH,CAAe,EAAE,IAAKI,MAAQ,MAAeA,CAAG,CAAC,EAAE,IAAKC,IAAS,CAClF,KAAMA,EAAI,KACV,qBAAsBA,EAAI,UAC1B,gBAAiBA,EAAI,IACvB,EAAE,EACF,OAAQ,MAAMP,EAAW,YAAY,CACnC,OAAAK,EACA,OAAQ,CACN,OACA,qBACA,gBACA,gBACF,CACF,CAAC,GAAG,KACN,EAAG,CAACL,EAAYE,CAAe,CAAC,EAChC,OAAIA,EAAgB,OAAS,EACJ,gBAAoB,IAAY,CAAE,QAAS,OAAQ,EAAGJ,EAAM,0BAA4B,8DAA8D,EAC3KM,EAAS,QACY,gBAAoB,KAAU,IAAI,EAEpDA,EAAS,MAAwB,gBAAoB,KAAoB,CAAE,MAAOA,EAAS,KAAM,CAAC,EAAoB,gBAAoB,IAAM,MAAOL,EAAKK,EAAS,QAAU,KAAO,OAASL,EAAG,KACvM,CAACS,EAAGC,IAAM,CACR,IAAIC,EAAKC,EACT,QAASD,EAAMF,EAAE,SAAS,QAAU,KAAOE,EAAMF,EAAE,SAAS,MAAM,eAC/DG,EAAKF,EAAE,SAAS,QAAU,KAAOE,EAAKF,EAAE,SAAS,IACpD,CACF,CACF,EAAE,IAAKG,GAAW,CAChB,IAAIF,EACJ,OAAuB,gBAAoB,IAAU,CAAE,OAAK,MAAmBE,CAAM,CAAE,EAAmB,gBAAoB,KAAM,CAAE,GAAIX,KAAmB,MAAkBW,CAAM,CAAC,CAAE,EAAmB,gBACzM,IACA,CACE,SAAUF,EAAME,EAAO,SAAS,QAAU,KAAOF,EAAME,EAAO,SAAS,IACzE,CACF,CAAC,EAAmB,gBAAoB,IAAyB,KAAsB,gBAAoB,KAAS,CAAE,MAAO,qBAAsB,EAAmB,gBACpK,IACA,CACE,KAAM,MACN,aAAc,SACd,QAAS,IAAMT,EAAoBS,CAAM,CAC3C,EACgB,gBAAoB,IAAU,CAAE,MAAO,CAAE,MAAO,SAAU,CAAE,CAAC,CAC/E,CAAC,CAAC,CAAC,CACL,CAAC,CAAC,CACJ,C","sources":["webpack://app/../../node_modules/@backstage/plugin-home/dist/esm/index-f5981b27.esm.js"],"sourcesContent":["import { catalogApiRef, entityRouteRef, useStarredEntities, entityRouteParams } from '@backstage/plugin-catalog-react';\nimport { parseEntityRef, stringifyEntityRef } from '@backstage/catalog-model';\nimport { useApi, useRouteRef } from '@backstage/core-plugin-api';\nimport { Progress, ResponseErrorPanel, Link } from '@backstage/core-components';\nimport { Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, IconButton } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport React from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nconst Content = (props) => {\n  var _a;\n  const catalogApi = useApi(catalogApiRef);\n  const catalogEntityRoute = useRouteRef(entityRouteRef);\n  const { starredEntities, toggleStarredEntity } = useStarredEntities();\n  const entities = useAsync(async () => {\n    if (!starredEntities.size) {\n      return [];\n    }\n    const filter = [...starredEntities].map((ent) => parseEntityRef(ent)).map((ref) => ({\n      kind: ref.kind,\n      \"metadata.namespace\": ref.namespace,\n      \"metadata.name\": ref.name\n    }));\n    return (await catalogApi.getEntities({\n      filter,\n      fields: [\n        \"kind\",\n        \"metadata.namespace\",\n        \"metadata.name\",\n        \"metadata.title\"\n      ]\n    })).items;\n  }, [catalogApi, starredEntities]);\n  if (starredEntities.size === 0)\n    return /* @__PURE__ */ React.createElement(Typography, { variant: \"body1\" }, props.noStarredEntitiesMessage || \"Click the star beside an entity name to add it to this list!\");\n  if (entities.loading) {\n    return /* @__PURE__ */ React.createElement(Progress, null);\n  }\n  return entities.error ? /* @__PURE__ */ React.createElement(ResponseErrorPanel, { error: entities.error }) : /* @__PURE__ */ React.createElement(List, null, (_a = entities.value) == null ? void 0 : _a.sort(\n    (a, b) => {\n      var _a2, _b;\n      return ((_a2 = a.metadata.title) != null ? _a2 : a.metadata.name).localeCompare(\n        (_b = b.metadata.title) != null ? _b : b.metadata.name\n      );\n    }\n  ).map((entity) => {\n    var _a2;\n    return /* @__PURE__ */ React.createElement(ListItem, { key: stringifyEntityRef(entity) }, /* @__PURE__ */ React.createElement(Link, { to: catalogEntityRoute(entityRouteParams(entity)) }, /* @__PURE__ */ React.createElement(\n      ListItemText,\n      {\n        primary: (_a2 = entity.metadata.title) != null ? _a2 : entity.metadata.name\n      }\n    )), /* @__PURE__ */ React.createElement(ListItemSecondaryAction, null, /* @__PURE__ */ React.createElement(Tooltip, { title: \"Remove from starred\" }, /* @__PURE__ */ React.createElement(\n      IconButton,\n      {\n        edge: \"end\",\n        \"aria-label\": \"unstar\",\n        onClick: () => toggleStarredEntity(entity)\n      },\n      /* @__PURE__ */ React.createElement(StarIcon, { style: { color: \"#f3ba37\" } })\n    ))));\n  }));\n};\n\nexport { Content };\n//# sourceMappingURL=index-f5981b27.esm.js.map\n"],"names":["Content","props","_a","catalogApi","catalogEntityRoute","starredEntities","toggleStarredEntity","entities","filter","ent","ref","a","b","_a2","_b","entity"],"sourceRoot":""}