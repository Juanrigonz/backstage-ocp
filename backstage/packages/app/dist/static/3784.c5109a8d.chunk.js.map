{"version":3,"file":"static/3784.c5109a8d.chunk.js","mappings":"2RASA,SAASA,GAAoB,CAC3B,MAAO,CACL,MAAO,QACP,MAAO,QACP,UAAW,GACX,OAASC,GAAwB,gBAAoB,IAAY,CAAE,QAAS,QAAS,OAAQ,EAAK,KAAG,KAAkBA,CAAG,EAAmB,gBAAoB,IAAK,CAAE,GAAI,EAAG,UAAW,MAAO,EAAmB,gBAAoB,IAAM,CAAE,KAAMA,EAAI,QAAS,OAAQ,QAAS,EAAGA,EAAI,KAAK,CAAC,CAAC,CACpS,CACF,CAEA,MAAMC,EAAyB,CAAC,CAC9B,KAAAC,EACA,YAAAC,CACF,IAAM,CACJ,MAAMC,EAAU,CACd,CAAE,MAAO,KAAM,MAAO,IAAK,EAC3BL,EAAkB,EAClB,CAAE,MAAO,UAAW,MAAO,QAAS,EACpC,CAAE,MAAO,QAAS,MAAO,OAAQ,EACjC,CAAE,MAAO,aAAc,MAAO,cAAe,EAC7C,CAAE,MAAO,WAAY,MAAO,UAAW,CACzC,EACMM,EAAQ,gCAAkCF,EAC1CG,EAAaJ,EAAK,IAAKK,IACpB,CACL,GAAIA,EAAa,GACjB,MAAOA,EAAa,MACpB,OAAQA,EAAa,OAAO,SAC5B,MAAOA,EAAa,MACpB,QAASA,EAAa,QACtB,gBAAc,KAAeA,EAAa,UAAU,EACpD,YAAU,KACRA,EAAa,WACbA,EAAa,UACf,CACF,EACD,EACD,OAAuB,gBACrB,KACA,CACE,MAAAF,EACA,QAAS,CAAE,OAAQ,GAAM,OAAQ,EAAK,EACtC,QAAAD,EACA,KAAME,GAAc,CAAC,CACvB,CACF,CACF,EACME,EAAqB,CAAC,CAAC,IAAM,CACjC,MAAMC,KAAa,KAAgB,EAC7BC,KAAe,KAAkB,EACjCC,KAAkB,KAAe,EACjCC,KAAc,MAAO,GAAc,EAAE,MACzCD,GAAmB,YACrB,EACM,CAAE,MAAAE,EAAO,QAAAC,EAAS,MAAAC,CAAM,KAAI,KAAS,SAAY,CACrD,MAAMC,EAAiB,MAAMJ,EAAY,kBACvCF,GAAgBD,CAClB,EACA,GAAI,CAACO,EACH,MAAM,IAAI,MAAM,kCAAkC,EACpD,MAAMC,EAAU,MAAML,EAAY,wBAChCI,EAAe,EACjB,EACA,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,qCAAqC,EACvD,MAAO,CAAE,KAAMA,EAAS,YAAaD,EAAe,IAAK,CAC3D,EAAG,CAAC,CAAC,EACL,OAAIF,EACqB,gBAAoB,KAAU,IAAI,EAChDC,EACc,gBAAoB,IAAO,CAAE,SAAU,OAAQ,EAAGA,EAAM,OAAO,EAC5EF,EAGW,gBAAoBZ,EAAwB,CAAE,GAAGY,CAAM,CAAC,EAFtD,gBAAoB,IAAO,CAAE,SAAU,OAAQ,EAAG,uCAAuC,CAGpH,EAEMK,EAAyB,CAAC,CAC9B,MAAAC,CACF,IAAM,CACJ,OAAQA,EAAO,CACb,IAAK,UACH,OAAuB,gBAAoB,KAAe,IAAI,EAChE,IAAK,cACH,OAAuB,gBAAoB,KAAe,IAAI,EAChE,IAAK,UACH,OAAuB,gBAAoB,KAAU,IAAI,EAC3D,IAAK,QACL,IAAK,SACH,OAAuB,gBAAoB,KAAa,IAAI,EAC9D,QACE,OAAuB,gBAAoB,KAAe,IAAI,CAClE,CACF,EACA,SAASC,GAAqB,CAC5B,MAAO,CACL,MAAO,SACP,OAASpB,GAAwB,gBAAoB,IAAK,CAAE,QAAS,OAAQ,WAAY,QAAS,EAAmB,gBAAoBkB,EAAwB,CAAE,MAAOlB,EAAI,MAAO,CAAC,EAAmB,gBAAoB,IAAY,CAAE,QAAS,SAAU,EAAGA,EAAI,MAAM,CAAC,CAC9Q,CACF,CACA,SAASqB,GAAqB,CAC5B,MAAO,CACL,MAAO,UACP,OAASrB,GAAwB,gBAC/B,IACA,CACE,KAAM,GAAGA,EAAI,UACb,OAAQ,SACR,IAAK,qBACP,EACAA,EAAI,OACN,CACF,CACF,CAEA,MAAMsB,EAAqB,CAAC,CAC1B,YAAAnB,EACA,QAAAc,CACF,IAAM,CACJ,MAAMb,EAAU,CACd,CAAE,MAAO,cAAe,MAAO,IAAK,EACpCgB,EAAmB,EACnB,CAAE,MAAO,SAAU,MAAO,KAAM,EAChCC,EAAmB,EACnB,CAAE,MAAO,aAAc,MAAO,cAAe,EAC7C,CAAE,MAAO,WAAY,MAAO,UAAW,CACzC,EACMhB,EAAQ,qBAAuBF,EAC/BD,EAAOe,EAAQ,IAAKM,IACjB,CACL,GAAIA,EAAe,GACnB,OAAQA,EAAe,OACvB,IAAKA,EAAe,IACpB,QAASA,EAAe,QACxB,gBAAc,KAAeA,EAAe,UAAU,EACtD,YAAU,KACRA,EAAe,WACfA,EAAe,UACjB,CACF,EACD,EACD,OAAuB,gBACrB,KACA,CACE,MAAAlB,EACA,QAAS,CAAE,OAAQ,GAAM,OAAQ,EAAK,EACtC,QAAAD,EACA,KAAMF,GAAQ,CAAC,CACjB,CACF,CACF,EACMsB,EAAiB,CAAC,CAAC,IAAM,CAC7B,MAAMf,KAAa,KAAgB,EAC7BC,KAAe,KAAkB,EACjCC,KAAkB,KAAe,EACjCC,KAAc,MAAO,GAAc,EAAE,MACzCD,GAAmB,YACrB,EACM,CAAE,MAAAE,EAAO,QAAAC,EAAS,MAAAC,CAAM,KAAI,KAAS,SAAY,CACrD,MAAMC,EAAiB,MAAMJ,EAAY,kBACvCF,GAAgBD,CAClB,EACA,GAAI,CAACO,EACH,MAAM,IAAI,MAAM,kCAAkC,EACpD,MAAMC,EAAU,MAAML,EAAY,mBAAmBI,EAAe,EAAE,EACtE,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,qCAAqC,EACvD,MAAO,CAAE,QAAAA,EAAS,YAAaD,EAAe,IAAK,CACrD,EAAG,CAAC,CAAC,EACL,OAAIF,EACqB,gBAAoB,KAAU,IAAI,EAChDC,EACc,gBAAoB,IAAO,CAAE,SAAU,OAAQ,EAAGA,EAAM,OAAO,EAC5EF,EAGW,gBAAoBS,EAAoB,CAAE,GAAGT,CAAM,CAAC,EAFlD,gBAAoB,IAAO,CAAE,SAAU,OAAQ,EAAG,gCAAgC,CAG7G,EAEMY,EAAuBC,GAAgB,CAC3C,OAAQA,EAAY,MAAO,CACzB,IAAK,SACH,OAAuB,gBAAoB,KAAe,KAAM,MAAM,EACxE,IAAK,SACH,OAAuB,gBAAoB,KAAU,KAAM,OAAO,EACpE,QACE,OAAuB,gBAAoB,KAAe,IAAI,CAClE,CACF,EACA,SAASC,EAAWD,EAAa,CAC/B,OAAuB,gBAAoB,IAAY,CAAE,QAAS,QAAS,OAAQ,EAAK,EAAmB,gBAAoB,IAAK,CAAE,GAAI,EAAG,UAAW,MAAO,EAAmB,gBAAoB,IAAM,CAAE,KAAMA,EAAY,QAAS,OAAQ,QAAS,EAAGA,EAAY,KAAK,CAAC,CAAC,CAClR,CACA,SAASE,EAAaF,EAAa,CACjC,OAAuB,gBAAoB,IAAK,CAAE,GAAI,CAAE,QAAS,OAAQ,WAAY,QAAS,CAAE,EAAmB,gBACjH,KACA,CACE,aAAc,CAAE,MAAO,GAAI,OAAQ,EAAG,EACtC,QAASA,EAAY,OAAO,WAC5B,YAAaA,EAAY,OAAO,QAClC,CACF,EAAmB,gBAAoB,IAAY,CAAE,QAAS,QAAS,OAAQ,EAAK,EAAmB,gBAAoB,IAAK,CAAE,GAAI,EAAG,UAAW,MAAO,EAAmB,gBAAoB,IAAM,CAAE,KAAMA,EAAY,OAAO,QAAS,OAAQ,QAAS,EAAGA,EAAY,OAAO,QAAQ,CAAC,CAAC,CAAC,CAChS,CAEA,MAAMG,EAAa,CAAC,CAClB,cAAAC,EACA,YAAA3B,CACF,IAAM,CACJ,MAAMC,EAAU,CACd,CAAE,MAAO,WAAY,MAAO,IAAK,EACjC,CAAE,MAAO,QAAS,OAAQuB,CAAW,EACrC,CAAE,MAAO,SAAU,OAAQC,CAAa,EACxC,CAAE,MAAO,aAAc,MAAO,YAAa,EAC3C,CAAE,MAAO,aAAc,MAAO,MAAO,EACrC,CAAE,MAAO,eAAgB,OAAQH,CAAoB,CACvD,EACMpB,EAAQ,kBAAoBF,EAC5BD,EAAO4B,EAAc,IAAKC,IAAW,CACzC,GAAGA,EACH,cAAY,KAAeA,EAAM,UAAU,CAC7C,EAAE,EACF,OAAuB,gBACrB,KACA,CACE,MAAA1B,EACA,QAAS,CAAE,OAAQ,GAAM,OAAQ,EAAK,EACtC,QAAAD,EACA,KAAAF,CACF,CACF,CACF,EACM8B,EAAc,CAAC,CAAC,IAAM,CAC1B,MAAMvB,KAAa,KAAgB,EAC7BC,KAAe,KAAkB,EACjCC,KAAkB,KAAe,EACjCC,KAAc,MAAO,GAAc,EAAE,MACzCD,GAAmB,YACrB,EACM,CAAE,MAAAE,EAAO,QAAAC,EAAS,MAAAC,CAAM,KAAI,KAAS,SAAY,CACrD,MAAMC,EAAiB,MAAMJ,EAAY,kBACvCF,GAAgBD,CAClB,EACA,GAAI,CAACO,EACH,MAAM,IAAI,MAAM,kCAAkC,EACpD,MAAMC,EAAU,MAAML,EAAY,iBAAiBI,EAAe,EAAE,EACpE,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,6BAA6B,EAM/C,MAJmB,CACjB,KAAMA,EACN,YAAaD,EAAe,IAC9B,CAEF,EAAG,CAAC,CAAC,EACL,OAAIF,EACqB,gBAAoB,KAAU,IAAI,EAChDC,EACc,gBAAoB,IAAO,CAAE,SAAU,OAAQ,EAAGA,EAAM,OAAO,EAEjE,gBACrBc,EACA,CACE,eAAgBhB,GAAS,KAAO,OAASA,EAAM,OAAS,CAAC,EACzD,YAAaA,GAAS,KAAO,OAASA,EAAM,WAC9C,CACF,CACF,C,2PC7PA,MAAMoB,EAAW,IAAsB,gBAAoB,KAAM,CAAE,QAAS,MAAO,EAAmB,gBAAoB,KAAS,KAAsB,gBAAoB,IAAM,CAAE,UAAW,GAAM,QAAS,EAAG,UAAW,MAAO,WAAY,SAAU,EAAmB,gBAAoB,IAAM,CAAE,KAAM,GAAM,GAAI,GAAI,GAAI,EAAG,GAAI,CAAE,EAAmB,gBAAoB,IAAY,IAAI,CAAC,EAAmB,gBAAoB,IAAM,CAAE,KAAM,GAAM,GAAI,GAAI,GAAI,EAAG,GAAI,CAAE,EAAmB,gBAAoB,IAAe,IAAI,CAAC,EAAmB,gBAAoB,IAAM,CAAE,KAAM,GAAM,GAAI,GAAI,GAAI,EAAG,GAAI,CAAE,EAAmB,gBAAoB,IAAmB,IAAI,CAAC,EAAmB,gBAAoB,IAAM,CAAE,KAAM,GAAM,GAAI,GAAI,GAAI,EAAG,GAAI,CAAE,EAAmB,gBAAoB,IAAc,IAAI,CAAC,EAAmB,gBAAoB,IAAM,CAAE,KAAM,GAAM,GAAI,EAAG,EAAmB,gBAAoB,IAAgB,IAAI,CAAC,EAAmB,gBAAoB,IAAM,CAAE,KAAM,GAAM,GAAI,EAAG,EAAmB,gBAAoB,IAAoB,IAAI,CAAC,EAAmB,gBAAoB,IAAM,CAAE,KAAM,GAAM,GAAI,EAAG,EAAmB,gBAAoB,IAAa,IAAI,CAAC,CAAC,CAAC,CAAC,C","sources":["webpack://app/../../node_modules/@immobiliarelabs/backstage-plugin-gitlab/dist/esm/IssuesTable-a34f0394.esm.js","webpack://app/../../node_modules/@immobiliarelabs/backstage-plugin-gitlab/dist/esm/index-e70150ba.esm.js"],"sourcesContent":["import React from 'react';\nimport { Progress, Table, StatusAborted, StatusError, StatusOK, StatusRunning, StatusPending, Avatar } from '@backstage/core-components';\nimport Alert from '@material-ui/lab/Alert';\nimport { useAsync } from 'react-use';\nimport { g as getStatusIconType, a as gitlabProjectId, b as gitlabProjectSlug, c as gitlabInstance, G as GitlabCIApiRef, d as getElapsedTime, e as getDuration } from './index-116ceac7.esm.js';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { Typography, Box, Link as Link$1 } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\n\nfunction createTitleColumn() {\n  return {\n    title: \"Title\",\n    field: \"title\",\n    highlight: true,\n    render: (row) => /* @__PURE__ */ React.createElement(Typography, { variant: \"body2\", noWrap: true }, getStatusIconType(row), /* @__PURE__ */ React.createElement(Box, { ml: 1, component: \"span\" }, /* @__PURE__ */ React.createElement(Link, { href: row.web_url, target: \"_blank\" }, row.title)))\n  };\n}\n\nconst MergeRequestDenseTable = ({\n  data,\n  projectName\n}) => {\n  const columns = [\n    { title: \"ID\", field: \"id\" },\n    createTitleColumn(),\n    { title: \"Creator\", field: \"author\" },\n    { title: \"State\", field: \"state\" },\n    { title: \"Created At\", field: \"created_date\" },\n    { title: \"Duration\", field: \"duration\" }\n  ];\n  const title = \"Gitlab Merge Request Status: \" + projectName;\n  const mappedData = data.map((mergeRequest) => {\n    return {\n      id: mergeRequest.id,\n      state: mergeRequest.state,\n      author: mergeRequest.author.username,\n      title: mergeRequest.title,\n      web_url: mergeRequest.web_url,\n      created_date: getElapsedTime(mergeRequest.created_at),\n      duration: getDuration(\n        mergeRequest.created_at,\n        mergeRequest.updated_at\n      )\n    };\n  });\n  return /* @__PURE__ */ React.createElement(\n    Table,\n    {\n      title,\n      options: { search: true, paging: true },\n      columns,\n      data: mappedData || []\n    }\n  );\n};\nconst MergeRequestsTable = ({}) => {\n  const project_id = gitlabProjectId();\n  const project_slug = gitlabProjectSlug();\n  const gitlab_instance = gitlabInstance();\n  const GitlabCIAPI = useApi(GitlabCIApiRef).build(\n    gitlab_instance || \"gitlab.com\"\n  );\n  const { value, loading, error } = useAsync(async () => {\n    const projectDetails = await GitlabCIAPI.getProjectDetails(\n      project_slug || project_id\n    );\n    if (!projectDetails)\n      throw new Error(\"wrong project_slug or project_id\");\n    const summary = await GitlabCIAPI.getMergeRequestsSummary(\n      projectDetails.id\n    );\n    if (!summary)\n      throw new Error(\"Merge request summary is undefined!\");\n    return { data: summary, projectName: projectDetails.name };\n  }, []);\n  if (loading) {\n    return /* @__PURE__ */ React.createElement(Progress, null);\n  } else if (error) {\n    return /* @__PURE__ */ React.createElement(Alert, { severity: \"error\" }, error.message);\n  } else if (!value) {\n    return /* @__PURE__ */ React.createElement(Alert, { severity: \"error\" }, \"Merge request data are not available.\");\n  }\n  return /* @__PURE__ */ React.createElement(MergeRequestDenseTable, { ...value });\n};\n\nconst GitlabCIStateIndicator = ({\n  state\n}) => {\n  switch (state) {\n    case \"pending\":\n      return /* @__PURE__ */ React.createElement(StatusPending, null);\n    case \"in_progress\":\n      return /* @__PURE__ */ React.createElement(StatusRunning, null);\n    case \"success\":\n      return /* @__PURE__ */ React.createElement(StatusOK, null);\n    case \"ERROR\":\n    case \"failed\":\n      return /* @__PURE__ */ React.createElement(StatusError, null);\n    default:\n      return /* @__PURE__ */ React.createElement(StatusAborted, null);\n  }\n};\nfunction createStatusColumn() {\n  return {\n    title: \"Status\",\n    render: (row) => /* @__PURE__ */ React.createElement(Box, { display: \"flex\", alignItems: \"center\" }, /* @__PURE__ */ React.createElement(GitlabCIStateIndicator, { state: row.status }), /* @__PURE__ */ React.createElement(Typography, { variant: \"caption\" }, row.status))\n  };\n}\nfunction createWebURLColumn() {\n  return {\n    title: \"Web URL\",\n    render: (row) => /* @__PURE__ */ React.createElement(\n      Link$1,\n      {\n        href: `${row.web_url}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      },\n      row.web_url\n    )\n  };\n}\n\nconst PipelineDenseTable = ({\n  projectName,\n  summary\n}) => {\n  const columns = [\n    { title: \"Pipeline_ID\", field: \"id\" },\n    createStatusColumn(),\n    { title: \"Branch\", field: \"ref\" },\n    createWebURLColumn(),\n    { title: \"Created At\", field: \"created_date\" },\n    { title: \"Duration\", field: \"duration\" }\n  ];\n  const title = \"Gitlab Pipelines: \" + projectName;\n  const data = summary.map((pipelineObject) => {\n    return {\n      id: pipelineObject.id,\n      status: pipelineObject.status,\n      ref: pipelineObject.ref,\n      web_url: pipelineObject.web_url,\n      created_date: getElapsedTime(pipelineObject.created_at),\n      duration: getDuration(\n        pipelineObject.created_at,\n        pipelineObject.updated_at\n      )\n    };\n  });\n  return /* @__PURE__ */ React.createElement(\n    Table,\n    {\n      title,\n      options: { search: true, paging: true },\n      columns,\n      data: data || []\n    }\n  );\n};\nconst PipelinesTable = ({}) => {\n  const project_id = gitlabProjectId();\n  const project_slug = gitlabProjectSlug();\n  const gitlab_instance = gitlabInstance();\n  const GitlabCIAPI = useApi(GitlabCIApiRef).build(\n    gitlab_instance || \"gitlab.com\"\n  );\n  const { value, loading, error } = useAsync(async () => {\n    const projectDetails = await GitlabCIAPI.getProjectDetails(\n      project_slug || project_id\n    );\n    if (!projectDetails)\n      throw new Error(\"wrong project_slug or project_id\");\n    const summary = await GitlabCIAPI.getPipelineSummary(projectDetails.id);\n    if (!summary)\n      throw new Error(\"Merge request summary is undefined!\");\n    return { summary, projectName: projectDetails.name };\n  }, []);\n  if (loading) {\n    return /* @__PURE__ */ React.createElement(Progress, null);\n  } else if (error) {\n    return /* @__PURE__ */ React.createElement(Alert, { severity: \"error\" }, error.message);\n  } else if (!value) {\n    return /* @__PURE__ */ React.createElement(Alert, { severity: \"error\" }, \"pipeline value is not defined!\");\n  }\n  return /* @__PURE__ */ React.createElement(PipelineDenseTable, { ...value });\n};\n\nconst IssueStateIndicator = (issueObject) => {\n  switch (issueObject.state) {\n    case \"opened\":\n      return /* @__PURE__ */ React.createElement(StatusPending, null, \"open\");\n    case \"closed\":\n      return /* @__PURE__ */ React.createElement(StatusOK, null, \"close\");\n    default:\n      return /* @__PURE__ */ React.createElement(StatusAborted, null);\n  }\n};\nfunction IssueTitle(issueObject) {\n  return /* @__PURE__ */ React.createElement(Typography, { variant: \"body2\", noWrap: true }, /* @__PURE__ */ React.createElement(Box, { ml: 1, component: \"span\" }, /* @__PURE__ */ React.createElement(Link, { href: issueObject.web_url, target: \"_blank\" }, issueObject.title)));\n}\nfunction AuthorColumn(issueObject) {\n  return /* @__PURE__ */ React.createElement(Box, { sx: { display: \"flex\", alignItems: \"center\" } }, /* @__PURE__ */ React.createElement(\n    Avatar,\n    {\n      customStyles: { width: 32, height: 32 },\n      picture: issueObject.author.avatar_url,\n      displayName: issueObject.author.username\n    }\n  ), /* @__PURE__ */ React.createElement(Typography, { variant: \"body2\", noWrap: true }, /* @__PURE__ */ React.createElement(Box, { ml: 1, component: \"span\" }, /* @__PURE__ */ React.createElement(Link, { href: issueObject.author.web_url, target: \"_blank\" }, issueObject.author.username))));\n}\n\nconst DenseTable = ({\n  issuesObjects,\n  projectName\n}) => {\n  const columns = [\n    { title: \"Issue ID\", field: \"id\" },\n    { title: \"Title\", render: IssueTitle },\n    { title: \"Author\", render: AuthorColumn },\n    { title: \"Created At\", field: \"created_at\" },\n    { title: \"Issue Type\", field: \"type\" },\n    { title: \"Issue Status\", render: IssueStateIndicator }\n  ];\n  const title = \"Gitlab Issues: \" + projectName;\n  const data = issuesObjects.map((issue) => ({\n    ...issue,\n    created_at: getElapsedTime(issue.created_at)\n  }));\n  return /* @__PURE__ */ React.createElement(\n    Table,\n    {\n      title,\n      options: { search: true, paging: true },\n      columns,\n      data\n    }\n  );\n};\nconst IssuesTable = ({}) => {\n  const project_id = gitlabProjectId();\n  const project_slug = gitlabProjectSlug();\n  const gitlab_instance = gitlabInstance();\n  const GitlabCIAPI = useApi(GitlabCIApiRef).build(\n    gitlab_instance || \"gitlab.com\"\n  );\n  const { value, loading, error } = useAsync(async () => {\n    const projectDetails = await GitlabCIAPI.getProjectDetails(\n      project_slug || project_id\n    );\n    if (!projectDetails)\n      throw new Error(\"wrong project_slug or project_id\");\n    const summary = await GitlabCIAPI.getIssuesSummary(projectDetails.id);\n    if (!summary) {\n      throw new Error(\"gitlab issues is undefined!\");\n    }\n    const renderData = {\n      data: summary,\n      projectName: projectDetails.name\n    };\n    return renderData;\n  }, []);\n  if (loading) {\n    return /* @__PURE__ */ React.createElement(Progress, null);\n  } else if (error) {\n    return /* @__PURE__ */ React.createElement(Alert, { severity: \"error\" }, error.message);\n  }\n  return /* @__PURE__ */ React.createElement(\n    DenseTable,\n    {\n      issuesObjects: (value == null ? void 0 : value.data) || [],\n      projectName: value == null ? void 0 : value.projectName\n    }\n  );\n};\n\nexport { IssuesTable as I, MergeRequestsTable as M, PipelinesTable as P };\n//# sourceMappingURL=IssuesTable-a34f0394.esm.js.map\n","import { Page, Content } from '@backstage/core-components';\nimport { Grid } from '@material-ui/core';\nimport React from 'react';\nimport { P as PeopleCard, L as LanguagesCard, M as MergeRequestStats, R as ReleasesCard } from './index-116ceac7.esm.js';\nimport { P as PipelinesTable, M as MergeRequestsTable, I as IssuesTable } from './IssuesTable-a34f0394.esm.js';\nimport '@backstage/core-plugin-api';\nimport 'dayjs';\nimport 'dayjs/plugin/relativeTime';\nimport 'dayjs/plugin/duration';\nimport '@backstage/plugin-catalog-react';\nimport '@material-ui/core/styles';\nimport '@material-ui/lab/Alert';\nimport 'react-use';\nimport '@backstage/integration-react';\nimport '@backstage/catalog-model';\nimport '@material-ui/icons/ArrowForward';\nimport '@material-ui/core/Link';\nimport '@material-ui/icons/LocalOfferOutlined';\nimport 'semver';\n\nconst GitlabCI = () => /* @__PURE__ */ React.createElement(Page, { themeId: \"tool\" }, /* @__PURE__ */ React.createElement(Content, null, /* @__PURE__ */ React.createElement(Grid, { container: true, spacing: 6, direction: \"row\", alignItems: \"stretch\" }, /* @__PURE__ */ React.createElement(Grid, { item: true, sm: 12, md: 3, lg: 3 }, /* @__PURE__ */ React.createElement(PeopleCard, null)), /* @__PURE__ */ React.createElement(Grid, { item: true, sm: 12, md: 3, lg: 3 }, /* @__PURE__ */ React.createElement(LanguagesCard, null)), /* @__PURE__ */ React.createElement(Grid, { item: true, sm: 12, md: 3, lg: 3 }, /* @__PURE__ */ React.createElement(MergeRequestStats, null)), /* @__PURE__ */ React.createElement(Grid, { item: true, sm: 12, md: 3, lg: 3 }, /* @__PURE__ */ React.createElement(ReleasesCard, null)), /* @__PURE__ */ React.createElement(Grid, { item: true, md: 12 }, /* @__PURE__ */ React.createElement(PipelinesTable, null)), /* @__PURE__ */ React.createElement(Grid, { item: true, md: 12 }, /* @__PURE__ */ React.createElement(MergeRequestsTable, null)), /* @__PURE__ */ React.createElement(Grid, { item: true, md: 12 }, /* @__PURE__ */ React.createElement(IssuesTable, null)))));\n\nexport { GitlabCI };\n//# sourceMappingURL=index-e70150ba.esm.js.map\n"],"names":["createTitleColumn","row","MergeRequestDenseTable","data","projectName","columns","title","mappedData","mergeRequest","MergeRequestsTable","project_id","project_slug","gitlab_instance","GitlabCIAPI","value","loading","error","projectDetails","summary","GitlabCIStateIndicator","state","createStatusColumn","createWebURLColumn","PipelineDenseTable","pipelineObject","PipelinesTable","IssueStateIndicator","issueObject","IssueTitle","AuthorColumn","DenseTable","issuesObjects","issue","IssuesTable","GitlabCI"],"sourceRoot":""}